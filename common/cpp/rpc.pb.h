// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: rpc.proto

#ifndef PROTOBUF_rpc_2eproto__INCLUDED
#define PROTOBUF_rpc_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace rpc {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_rpc_2eproto();
void protobuf_AssignDesc_rpc_2eproto();
void protobuf_ShutdownFile_rpc_2eproto();

class RpcRequest;
class Execute;
class Response;
class MakeNamesRequest;
class MakeNamesRequest_Name;
class MakeCommentsRequest;
class MakeCommentsRequest_Name;
class GetMemoryMapResult;
class GetMemoryMapResult_Memory;
class ReadMemoryRegionsRequest;
class ReadMemoryRegionsRequest_Region;
class ReadMemoryRegionsResult;
class ReadMemoryRegionsResult_Memory;
class AnalyzeExternalRefsRequest;
class AnalyzeExternalRefsResult;
class AnalyzeExternalRefsResult_PointerData;
class AnalyzeExternalRefsResult_RefData;
class AnalyzeExternalRefsResult_reg_t;
class CheckPEHeadersRequest;
class CheckPEHeadersResult;
class CheckPEHeadersResult_Exports;
class CheckPEHeadersResult_Section;
class GetBackendInfoResult;
class AutoCompleteCodeRequest;
class AutoCompleteCodeResult;
class AutoCompleteCodeResult_CallSignature;
class AutoCompleteCodeResult_CallSignature_Param;

enum RpcRequest_RequestType {
  RpcRequest_RequestType_RPCT_UNKNOWN = 0,
  RpcRequest_RequestType_RPCT_MAKE_NAMES = 1,
  RpcRequest_RequestType_RPCT_MAKE_COMMENTS = 2,
  RpcRequest_RequestType_RPCT_GET_MEMORY_MAP = 3,
  RpcRequest_RequestType_RPCT_READ_MEMORY_REGIONS = 4,
  RpcRequest_RequestType_RPCT_ANALYZE_EXTERNAL_REFS = 5,
  RpcRequest_RequestType_RPCT_CHECK_PE_HEADERS = 6,
  RpcRequest_RequestType_RPCT_GET_BACKEND_INFO = 7,
  RpcRequest_RequestType_RPCT_AUTO_COMPLETE_CODE = 8
};
bool RpcRequest_RequestType_IsValid(int value);
const RpcRequest_RequestType RpcRequest_RequestType_RequestType_MIN = RpcRequest_RequestType_RPCT_UNKNOWN;
const RpcRequest_RequestType RpcRequest_RequestType_RequestType_MAX = RpcRequest_RequestType_RPCT_AUTO_COMPLETE_CODE;
const int RpcRequest_RequestType_RequestType_ARRAYSIZE = RpcRequest_RequestType_RequestType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RpcRequest_RequestType_descriptor();
inline const ::std::string& RpcRequest_RequestType_Name(RpcRequest_RequestType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RpcRequest_RequestType_descriptor(), value);
}
inline bool RpcRequest_RequestType_Parse(
    const ::std::string& name, RpcRequest_RequestType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RpcRequest_RequestType>(
    RpcRequest_RequestType_descriptor(), name, value);
}
enum Response_JobStatus {
  Response_JobStatus_JS_FINISHED = 1,
  Response_JobStatus_JS_PENDING = 2
};
bool Response_JobStatus_IsValid(int value);
const Response_JobStatus Response_JobStatus_JobStatus_MIN = Response_JobStatus_JS_FINISHED;
const Response_JobStatus Response_JobStatus_JobStatus_MAX = Response_JobStatus_JS_PENDING;
const int Response_JobStatus_JobStatus_ARRAYSIZE = Response_JobStatus_JobStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* Response_JobStatus_descriptor();
inline const ::std::string& Response_JobStatus_Name(Response_JobStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    Response_JobStatus_descriptor(), value);
}
inline bool Response_JobStatus_Parse(
    const ::std::string& name, Response_JobStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Response_JobStatus>(
    Response_JobStatus_descriptor(), name, value);
}
enum AnalyzeExternalRefsResult_RefData_RefType {
  AnalyzeExternalRefsResult_RefData_RefType_REFT_JMPCONST = 1,
  AnalyzeExternalRefsResult_RefData_RefType_REFT_IMMCONST = 2,
  AnalyzeExternalRefsResult_RefData_RefType_REFT_ADDRCONST = 3
};
bool AnalyzeExternalRefsResult_RefData_RefType_IsValid(int value);
const AnalyzeExternalRefsResult_RefData_RefType AnalyzeExternalRefsResult_RefData_RefType_RefType_MIN = AnalyzeExternalRefsResult_RefData_RefType_REFT_JMPCONST;
const AnalyzeExternalRefsResult_RefData_RefType AnalyzeExternalRefsResult_RefData_RefType_RefType_MAX = AnalyzeExternalRefsResult_RefData_RefType_REFT_ADDRCONST;
const int AnalyzeExternalRefsResult_RefData_RefType_RefType_ARRAYSIZE = AnalyzeExternalRefsResult_RefData_RefType_RefType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AnalyzeExternalRefsResult_RefData_RefType_descriptor();
inline const ::std::string& AnalyzeExternalRefsResult_RefData_RefType_Name(AnalyzeExternalRefsResult_RefData_RefType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AnalyzeExternalRefsResult_RefData_RefType_descriptor(), value);
}
inline bool AnalyzeExternalRefsResult_RefData_RefType_Parse(
    const ::std::string& name, AnalyzeExternalRefsResult_RefData_RefType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AnalyzeExternalRefsResult_RefData_RefType>(
    AnalyzeExternalRefsResult_RefData_RefType_descriptor(), name, value);
}
// ===================================================================

class RpcRequest : public ::google::protobuf::Message {
 public:
  RpcRequest();
  virtual ~RpcRequest();

  RpcRequest(const RpcRequest& from);

  inline RpcRequest& operator=(const RpcRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RpcRequest& default_instance();

  void Swap(RpcRequest* other);

  // implements Message ----------------------------------------------

  RpcRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RpcRequest& from);
  void MergeFrom(const RpcRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef RpcRequest_RequestType RequestType;
  static const RequestType RPCT_UNKNOWN = RpcRequest_RequestType_RPCT_UNKNOWN;
  static const RequestType RPCT_MAKE_NAMES = RpcRequest_RequestType_RPCT_MAKE_NAMES;
  static const RequestType RPCT_MAKE_COMMENTS = RpcRequest_RequestType_RPCT_MAKE_COMMENTS;
  static const RequestType RPCT_GET_MEMORY_MAP = RpcRequest_RequestType_RPCT_GET_MEMORY_MAP;
  static const RequestType RPCT_READ_MEMORY_REGIONS = RpcRequest_RequestType_RPCT_READ_MEMORY_REGIONS;
  static const RequestType RPCT_ANALYZE_EXTERNAL_REFS = RpcRequest_RequestType_RPCT_ANALYZE_EXTERNAL_REFS;
  static const RequestType RPCT_CHECK_PE_HEADERS = RpcRequest_RequestType_RPCT_CHECK_PE_HEADERS;
  static const RequestType RPCT_GET_BACKEND_INFO = RpcRequest_RequestType_RPCT_GET_BACKEND_INFO;
  static const RequestType RPCT_AUTO_COMPLETE_CODE = RpcRequest_RequestType_RPCT_AUTO_COMPLETE_CODE;
  static inline bool RequestType_IsValid(int value) {
    return RpcRequest_RequestType_IsValid(value);
  }
  static const RequestType RequestType_MIN =
    RpcRequest_RequestType_RequestType_MIN;
  static const RequestType RequestType_MAX =
    RpcRequest_RequestType_RequestType_MAX;
  static const int RequestType_ARRAYSIZE =
    RpcRequest_RequestType_RequestType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RequestType_descriptor() {
    return RpcRequest_RequestType_descriptor();
  }
  static inline const ::std::string& RequestType_Name(RequestType value) {
    return RpcRequest_RequestType_Name(value);
  }
  static inline bool RequestType_Parse(const ::std::string& name,
      RequestType* value) {
    return RpcRequest_RequestType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .rpc.RpcRequest.RequestType request_type = 1;
  inline bool has_request_type() const;
  inline void clear_request_type();
  static const int kRequestTypeFieldNumber = 1;
  inline ::rpc::RpcRequest_RequestType request_type() const;
  inline void set_request_type(::rpc::RpcRequest_RequestType value);

  // optional .rpc.MakeNamesRequest make_names_req = 2;
  inline bool has_make_names_req() const;
  inline void clear_make_names_req();
  static const int kMakeNamesReqFieldNumber = 2;
  inline const ::rpc::MakeNamesRequest& make_names_req() const;
  inline ::rpc::MakeNamesRequest* mutable_make_names_req();
  inline ::rpc::MakeNamesRequest* release_make_names_req();
  inline void set_allocated_make_names_req(::rpc::MakeNamesRequest* make_names_req);

  // optional .rpc.MakeCommentsRequest make_comments_req = 3;
  inline bool has_make_comments_req() const;
  inline void clear_make_comments_req();
  static const int kMakeCommentsReqFieldNumber = 3;
  inline const ::rpc::MakeCommentsRequest& make_comments_req() const;
  inline ::rpc::MakeCommentsRequest* mutable_make_comments_req();
  inline ::rpc::MakeCommentsRequest* release_make_comments_req();
  inline void set_allocated_make_comments_req(::rpc::MakeCommentsRequest* make_comments_req);

  // optional .rpc.ReadMemoryRegionsRequest read_memory_regions_req = 4;
  inline bool has_read_memory_regions_req() const;
  inline void clear_read_memory_regions_req();
  static const int kReadMemoryRegionsReqFieldNumber = 4;
  inline const ::rpc::ReadMemoryRegionsRequest& read_memory_regions_req() const;
  inline ::rpc::ReadMemoryRegionsRequest* mutable_read_memory_regions_req();
  inline ::rpc::ReadMemoryRegionsRequest* release_read_memory_regions_req();
  inline void set_allocated_read_memory_regions_req(::rpc::ReadMemoryRegionsRequest* read_memory_regions_req);

  // optional .rpc.AnalyzeExternalRefsRequest analyze_external_refs_req = 5;
  inline bool has_analyze_external_refs_req() const;
  inline void clear_analyze_external_refs_req();
  static const int kAnalyzeExternalRefsReqFieldNumber = 5;
  inline const ::rpc::AnalyzeExternalRefsRequest& analyze_external_refs_req() const;
  inline ::rpc::AnalyzeExternalRefsRequest* mutable_analyze_external_refs_req();
  inline ::rpc::AnalyzeExternalRefsRequest* release_analyze_external_refs_req();
  inline void set_allocated_analyze_external_refs_req(::rpc::AnalyzeExternalRefsRequest* analyze_external_refs_req);

  // optional .rpc.CheckPEHeadersRequest check_pe_headers_req = 6;
  inline bool has_check_pe_headers_req() const;
  inline void clear_check_pe_headers_req();
  static const int kCheckPeHeadersReqFieldNumber = 6;
  inline const ::rpc::CheckPEHeadersRequest& check_pe_headers_req() const;
  inline ::rpc::CheckPEHeadersRequest* mutable_check_pe_headers_req();
  inline ::rpc::CheckPEHeadersRequest* release_check_pe_headers_req();
  inline void set_allocated_check_pe_headers_req(::rpc::CheckPEHeadersRequest* check_pe_headers_req);

  // optional .rpc.AutoCompleteCodeRequest auto_complete_code_req = 7;
  inline bool has_auto_complete_code_req() const;
  inline void clear_auto_complete_code_req();
  static const int kAutoCompleteCodeReqFieldNumber = 7;
  inline const ::rpc::AutoCompleteCodeRequest& auto_complete_code_req() const;
  inline ::rpc::AutoCompleteCodeRequest* mutable_auto_complete_code_req();
  inline ::rpc::AutoCompleteCodeRequest* release_auto_complete_code_req();
  inline void set_allocated_auto_complete_code_req(::rpc::AutoCompleteCodeRequest* auto_complete_code_req);

  // @@protoc_insertion_point(class_scope:rpc.RpcRequest)
 private:
  inline void set_has_request_type();
  inline void clear_has_request_type();
  inline void set_has_make_names_req();
  inline void clear_has_make_names_req();
  inline void set_has_make_comments_req();
  inline void clear_has_make_comments_req();
  inline void set_has_read_memory_regions_req();
  inline void clear_has_read_memory_regions_req();
  inline void set_has_analyze_external_refs_req();
  inline void clear_has_analyze_external_refs_req();
  inline void set_has_check_pe_headers_req();
  inline void clear_has_check_pe_headers_req();
  inline void set_has_auto_complete_code_req();
  inline void clear_has_auto_complete_code_req();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::rpc::MakeNamesRequest* make_names_req_;
  ::rpc::MakeCommentsRequest* make_comments_req_;
  ::rpc::ReadMemoryRegionsRequest* read_memory_regions_req_;
  ::rpc::AnalyzeExternalRefsRequest* analyze_external_refs_req_;
  ::rpc::CheckPEHeadersRequest* check_pe_headers_req_;
  ::rpc::AutoCompleteCodeRequest* auto_complete_code_req_;
  int request_type_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static RpcRequest* default_instance_;
};
// -------------------------------------------------------------------

class Execute : public ::google::protobuf::Message {
 public:
  Execute();
  virtual ~Execute();

  Execute(const Execute& from);

  inline Execute& operator=(const Execute& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Execute& default_instance();

  void Swap(Execute* other);

  // implements Message ----------------------------------------------

  Execute* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Execute& from);
  void MergeFrom(const Execute& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string script = 1;
  inline bool has_script() const;
  inline void clear_script();
  static const int kScriptFieldNumber = 1;
  inline const ::std::string& script() const;
  inline void set_script(const ::std::string& value);
  inline void set_script(const char* value);
  inline void set_script(const char* value, size_t size);
  inline ::std::string* mutable_script();
  inline ::std::string* release_script();
  inline void set_allocated_script(::std::string* script);

  // optional string script_extern_obj = 2;
  inline bool has_script_extern_obj() const;
  inline void clear_script_extern_obj();
  static const int kScriptExternObjFieldNumber = 2;
  inline const ::std::string& script_extern_obj() const;
  inline void set_script_extern_obj(const ::std::string& value);
  inline void set_script_extern_obj(const char* value);
  inline void set_script_extern_obj(const char* value, size_t size);
  inline ::std::string* mutable_script_extern_obj();
  inline ::std::string* release_script_extern_obj();
  inline void set_allocated_script_extern_obj(::std::string* script_extern_obj);

  // optional bytes rpc_request = 3;
  inline bool has_rpc_request() const;
  inline void clear_rpc_request();
  static const int kRpcRequestFieldNumber = 3;
  inline const ::std::string& rpc_request() const;
  inline void set_rpc_request(const ::std::string& value);
  inline void set_rpc_request(const char* value);
  inline void set_rpc_request(const void* value, size_t size);
  inline ::std::string* mutable_rpc_request();
  inline ::std::string* release_rpc_request();
  inline void set_allocated_rpc_request(::std::string* rpc_request);

  // optional bool background = 4 [default = false];
  inline bool has_background() const;
  inline void clear_background();
  static const int kBackgroundFieldNumber = 4;
  inline bool background() const;
  inline void set_background(bool value);

  // optional uint64 job_id = 5;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 5;
  inline ::google::protobuf::uint64 job_id() const;
  inline void set_job_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.Execute)
 private:
  inline void set_has_script();
  inline void clear_has_script();
  inline void set_has_script_extern_obj();
  inline void clear_has_script_extern_obj();
  inline void set_has_rpc_request();
  inline void clear_has_rpc_request();
  inline void set_has_background();
  inline void clear_has_background();
  inline void set_has_job_id();
  inline void clear_has_job_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* script_;
  ::std::string* script_extern_obj_;
  ::std::string* rpc_request_;
  ::google::protobuf::uint64 job_id_;
  bool background_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static Execute* default_instance_;
};
// -------------------------------------------------------------------

class Response : public ::google::protobuf::Message {
 public:
  Response();
  virtual ~Response();

  Response(const Response& from);

  inline Response& operator=(const Response& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Response& default_instance();

  void Swap(Response* other);

  // implements Message ----------------------------------------------

  Response* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Response& from);
  void MergeFrom(const Response& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Response_JobStatus JobStatus;
  static const JobStatus JS_FINISHED = Response_JobStatus_JS_FINISHED;
  static const JobStatus JS_PENDING = Response_JobStatus_JS_PENDING;
  static inline bool JobStatus_IsValid(int value) {
    return Response_JobStatus_IsValid(value);
  }
  static const JobStatus JobStatus_MIN =
    Response_JobStatus_JobStatus_MIN;
  static const JobStatus JobStatus_MAX =
    Response_JobStatus_JobStatus_MAX;
  static const int JobStatus_ARRAYSIZE =
    Response_JobStatus_JobStatus_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  JobStatus_descriptor() {
    return Response_JobStatus_descriptor();
  }
  static inline const ::std::string& JobStatus_Name(JobStatus value) {
    return Response_JobStatus_Name(value);
  }
  static inline bool JobStatus_Parse(const ::std::string& name,
      JobStatus* value) {
    return Response_JobStatus_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 job_id = 1;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::uint64 job_id() const;
  inline void set_job_id(::google::protobuf::uint64 value);

  // optional string std_out = 2;
  inline bool has_std_out() const;
  inline void clear_std_out();
  static const int kStdOutFieldNumber = 2;
  inline const ::std::string& std_out() const;
  inline void set_std_out(const ::std::string& value);
  inline void set_std_out(const char* value);
  inline void set_std_out(const char* value, size_t size);
  inline ::std::string* mutable_std_out();
  inline ::std::string* release_std_out();
  inline void set_allocated_std_out(::std::string* std_out);

  // optional string std_err = 3;
  inline bool has_std_err() const;
  inline void clear_std_err();
  static const int kStdErrFieldNumber = 3;
  inline const ::std::string& std_err() const;
  inline void set_std_err(const ::std::string& value);
  inline void set_std_err(const char* value);
  inline void set_std_err(const char* value, size_t size);
  inline ::std::string* mutable_std_err();
  inline ::std::string* release_std_err();
  inline void set_allocated_std_err(::std::string* std_err);

  // optional string error = 4;
  inline bool has_error() const;
  inline void clear_error();
  static const int kErrorFieldNumber = 4;
  inline const ::std::string& error() const;
  inline void set_error(const ::std::string& value);
  inline void set_error(const char* value);
  inline void set_error(const char* value, size_t size);
  inline ::std::string* mutable_error();
  inline ::std::string* release_error();
  inline void set_allocated_error(::std::string* error);

  // optional bytes rpc_result = 5;
  inline bool has_rpc_result() const;
  inline void clear_rpc_result();
  static const int kRpcResultFieldNumber = 5;
  inline const ::std::string& rpc_result() const;
  inline void set_rpc_result(const ::std::string& value);
  inline void set_rpc_result(const char* value);
  inline void set_rpc_result(const void* value, size_t size);
  inline ::std::string* mutable_rpc_result();
  inline ::std::string* release_rpc_result();
  inline void set_allocated_rpc_result(::std::string* rpc_result);

  // optional .rpc.Response.JobStatus job_status = 6;
  inline bool has_job_status() const;
  inline void clear_job_status();
  static const int kJobStatusFieldNumber = 6;
  inline ::rpc::Response_JobStatus job_status() const;
  inline void set_job_status(::rpc::Response_JobStatus value);

  // optional string script_result_obj = 7;
  inline bool has_script_result_obj() const;
  inline void clear_script_result_obj();
  static const int kScriptResultObjFieldNumber = 7;
  inline const ::std::string& script_result_obj() const;
  inline void set_script_result_obj(const ::std::string& value);
  inline void set_script_result_obj(const char* value);
  inline void set_script_result_obj(const char* value, size_t size);
  inline ::std::string* mutable_script_result_obj();
  inline ::std::string* release_script_result_obj();
  inline void set_allocated_script_result_obj(::std::string* script_result_obj);

  // @@protoc_insertion_point(class_scope:rpc.Response)
 private:
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_std_out();
  inline void clear_has_std_out();
  inline void set_has_std_err();
  inline void clear_has_std_err();
  inline void set_has_error();
  inline void clear_has_error();
  inline void set_has_rpc_result();
  inline void clear_has_rpc_result();
  inline void set_has_job_status();
  inline void clear_has_job_status();
  inline void set_has_script_result_obj();
  inline void clear_has_script_result_obj();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 job_id_;
  ::std::string* std_out_;
  ::std::string* std_err_;
  ::std::string* error_;
  ::std::string* rpc_result_;
  ::std::string* script_result_obj_;
  int job_status_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static Response* default_instance_;
};
// -------------------------------------------------------------------

class MakeNamesRequest_Name : public ::google::protobuf::Message {
 public:
  MakeNamesRequest_Name();
  virtual ~MakeNamesRequest_Name();

  MakeNamesRequest_Name(const MakeNamesRequest_Name& from);

  inline MakeNamesRequest_Name& operator=(const MakeNamesRequest_Name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeNamesRequest_Name& default_instance();

  void Swap(MakeNamesRequest_Name* other);

  // implements Message ----------------------------------------------

  MakeNamesRequest_Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeNamesRequest_Name& from);
  void MergeFrom(const MakeNamesRequest_Name& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ea = 1;
  inline bool has_ea() const;
  inline void clear_ea();
  static const int kEaFieldNumber = 1;
  inline ::google::protobuf::uint64 ea() const;
  inline void set_ea(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:rpc.MakeNamesRequest.Name)
 private:
  inline void set_has_ea();
  inline void clear_has_ea();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ea_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MakeNamesRequest_Name* default_instance_;
};
// -------------------------------------------------------------------

class MakeNamesRequest : public ::google::protobuf::Message {
 public:
  MakeNamesRequest();
  virtual ~MakeNamesRequest();

  MakeNamesRequest(const MakeNamesRequest& from);

  inline MakeNamesRequest& operator=(const MakeNamesRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeNamesRequest& default_instance();

  void Swap(MakeNamesRequest* other);

  // implements Message ----------------------------------------------

  MakeNamesRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeNamesRequest& from);
  void MergeFrom(const MakeNamesRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MakeNamesRequest_Name Name;

  // accessors -------------------------------------------------------

  // repeated .rpc.MakeNamesRequest.Name names = 1;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 1;
  inline const ::rpc::MakeNamesRequest_Name& names(int index) const;
  inline ::rpc::MakeNamesRequest_Name* mutable_names(int index);
  inline ::rpc::MakeNamesRequest_Name* add_names();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::MakeNamesRequest_Name >&
      names() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::MakeNamesRequest_Name >*
      mutable_names();

  // required uint64 base = 2;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 2;
  inline ::google::protobuf::uint64 base() const;
  inline void set_base(::google::protobuf::uint64 value);

  // required uint64 remote_base = 3;
  inline bool has_remote_base() const;
  inline void clear_remote_base();
  static const int kRemoteBaseFieldNumber = 3;
  inline ::google::protobuf::uint64 remote_base() const;
  inline void set_remote_base(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.MakeNamesRequest)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_remote_base();
  inline void clear_has_remote_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::MakeNamesRequest_Name > names_;
  ::google::protobuf::uint64 base_;
  ::google::protobuf::uint64 remote_base_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MakeNamesRequest* default_instance_;
};
// -------------------------------------------------------------------

class MakeCommentsRequest_Name : public ::google::protobuf::Message {
 public:
  MakeCommentsRequest_Name();
  virtual ~MakeCommentsRequest_Name();

  MakeCommentsRequest_Name(const MakeCommentsRequest_Name& from);

  inline MakeCommentsRequest_Name& operator=(const MakeCommentsRequest_Name& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeCommentsRequest_Name& default_instance();

  void Swap(MakeCommentsRequest_Name* other);

  // implements Message ----------------------------------------------

  MakeCommentsRequest_Name* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeCommentsRequest_Name& from);
  void MergeFrom(const MakeCommentsRequest_Name& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ea = 1;
  inline bool has_ea() const;
  inline void clear_ea();
  static const int kEaFieldNumber = 1;
  inline ::google::protobuf::uint64 ea() const;
  inline void set_ea(::google::protobuf::uint64 value);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:rpc.MakeCommentsRequest.Name)
 private:
  inline void set_has_ea();
  inline void clear_has_ea();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ea_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MakeCommentsRequest_Name* default_instance_;
};
// -------------------------------------------------------------------

class MakeCommentsRequest : public ::google::protobuf::Message {
 public:
  MakeCommentsRequest();
  virtual ~MakeCommentsRequest();

  MakeCommentsRequest(const MakeCommentsRequest& from);

  inline MakeCommentsRequest& operator=(const MakeCommentsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MakeCommentsRequest& default_instance();

  void Swap(MakeCommentsRequest* other);

  // implements Message ----------------------------------------------

  MakeCommentsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MakeCommentsRequest& from);
  void MergeFrom(const MakeCommentsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef MakeCommentsRequest_Name Name;

  // accessors -------------------------------------------------------

  // repeated .rpc.MakeCommentsRequest.Name names = 1;
  inline int names_size() const;
  inline void clear_names();
  static const int kNamesFieldNumber = 1;
  inline const ::rpc::MakeCommentsRequest_Name& names(int index) const;
  inline ::rpc::MakeCommentsRequest_Name* mutable_names(int index);
  inline ::rpc::MakeCommentsRequest_Name* add_names();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::MakeCommentsRequest_Name >&
      names() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::MakeCommentsRequest_Name >*
      mutable_names();

  // required uint64 base = 2;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 2;
  inline ::google::protobuf::uint64 base() const;
  inline void set_base(::google::protobuf::uint64 value);

  // required uint64 remote_base = 3;
  inline bool has_remote_base() const;
  inline void clear_remote_base();
  static const int kRemoteBaseFieldNumber = 3;
  inline ::google::protobuf::uint64 remote_base() const;
  inline void set_remote_base(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.MakeCommentsRequest)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_remote_base();
  inline void clear_has_remote_base();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::MakeCommentsRequest_Name > names_;
  ::google::protobuf::uint64 base_;
  ::google::protobuf::uint64 remote_base_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static MakeCommentsRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetMemoryMapResult_Memory : public ::google::protobuf::Message {
 public:
  GetMemoryMapResult_Memory();
  virtual ~GetMemoryMapResult_Memory();

  GetMemoryMapResult_Memory(const GetMemoryMapResult_Memory& from);

  inline GetMemoryMapResult_Memory& operator=(const GetMemoryMapResult_Memory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMemoryMapResult_Memory& default_instance();

  void Swap(GetMemoryMapResult_Memory* other);

  // implements Message ----------------------------------------------

  GetMemoryMapResult_Memory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMemoryMapResult_Memory& from);
  void MergeFrom(const GetMemoryMapResult_Memory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline ::google::protobuf::uint64 base() const;
  inline void set_base(::google::protobuf::uint64 value);

  // required uint64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint64 size() const;
  inline void set_size(::google::protobuf::uint64 value);

  // required uint32 access = 3;
  inline bool has_access() const;
  inline void clear_access();
  static const int kAccessFieldNumber = 3;
  inline ::google::protobuf::uint32 access() const;
  inline void set_access(::google::protobuf::uint32 value);

  // required string name = 4;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 4;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:rpc.GetMemoryMapResult.Memory)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_access();
  inline void clear_has_access();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 base_;
  ::google::protobuf::uint64 size_;
  ::std::string* name_;
  ::google::protobuf::uint32 access_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static GetMemoryMapResult_Memory* default_instance_;
};
// -------------------------------------------------------------------

class GetMemoryMapResult : public ::google::protobuf::Message {
 public:
  GetMemoryMapResult();
  virtual ~GetMemoryMapResult();

  GetMemoryMapResult(const GetMemoryMapResult& from);

  inline GetMemoryMapResult& operator=(const GetMemoryMapResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMemoryMapResult& default_instance();

  void Swap(GetMemoryMapResult* other);

  // implements Message ----------------------------------------------

  GetMemoryMapResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMemoryMapResult& from);
  void MergeFrom(const GetMemoryMapResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef GetMemoryMapResult_Memory Memory;

  // accessors -------------------------------------------------------

  // repeated .rpc.GetMemoryMapResult.Memory memories = 1;
  inline int memories_size() const;
  inline void clear_memories();
  static const int kMemoriesFieldNumber = 1;
  inline const ::rpc::GetMemoryMapResult_Memory& memories(int index) const;
  inline ::rpc::GetMemoryMapResult_Memory* mutable_memories(int index);
  inline ::rpc::GetMemoryMapResult_Memory* add_memories();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::GetMemoryMapResult_Memory >&
      memories() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::GetMemoryMapResult_Memory >*
      mutable_memories();

  // @@protoc_insertion_point(class_scope:rpc.GetMemoryMapResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::GetMemoryMapResult_Memory > memories_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static GetMemoryMapResult* default_instance_;
};
// -------------------------------------------------------------------

class ReadMemoryRegionsRequest_Region : public ::google::protobuf::Message {
 public:
  ReadMemoryRegionsRequest_Region();
  virtual ~ReadMemoryRegionsRequest_Region();

  ReadMemoryRegionsRequest_Region(const ReadMemoryRegionsRequest_Region& from);

  inline ReadMemoryRegionsRequest_Region& operator=(const ReadMemoryRegionsRequest_Region& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMemoryRegionsRequest_Region& default_instance();

  void Swap(ReadMemoryRegionsRequest_Region* other);

  // implements Message ----------------------------------------------

  ReadMemoryRegionsRequest_Region* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMemoryRegionsRequest_Region& from);
  void MergeFrom(const ReadMemoryRegionsRequest_Region& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 addr = 1;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 1;
  inline ::google::protobuf::uint64 addr() const;
  inline void set_addr(::google::protobuf::uint64 value);

  // required uint64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint64 size() const;
  inline void set_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.ReadMemoryRegionsRequest.Region)
 private:
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 addr_;
  ::google::protobuf::uint64 size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static ReadMemoryRegionsRequest_Region* default_instance_;
};
// -------------------------------------------------------------------

class ReadMemoryRegionsRequest : public ::google::protobuf::Message {
 public:
  ReadMemoryRegionsRequest();
  virtual ~ReadMemoryRegionsRequest();

  ReadMemoryRegionsRequest(const ReadMemoryRegionsRequest& from);

  inline ReadMemoryRegionsRequest& operator=(const ReadMemoryRegionsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMemoryRegionsRequest& default_instance();

  void Swap(ReadMemoryRegionsRequest* other);

  // implements Message ----------------------------------------------

  ReadMemoryRegionsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMemoryRegionsRequest& from);
  void MergeFrom(const ReadMemoryRegionsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReadMemoryRegionsRequest_Region Region;

  // accessors -------------------------------------------------------

  // repeated .rpc.ReadMemoryRegionsRequest.Region regions = 1;
  inline int regions_size() const;
  inline void clear_regions();
  static const int kRegionsFieldNumber = 1;
  inline const ::rpc::ReadMemoryRegionsRequest_Region& regions(int index) const;
  inline ::rpc::ReadMemoryRegionsRequest_Region* mutable_regions(int index);
  inline ::rpc::ReadMemoryRegionsRequest_Region* add_regions();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsRequest_Region >&
      regions() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsRequest_Region >*
      mutable_regions();

  // @@protoc_insertion_point(class_scope:rpc.ReadMemoryRegionsRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsRequest_Region > regions_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static ReadMemoryRegionsRequest* default_instance_;
};
// -------------------------------------------------------------------

class ReadMemoryRegionsResult_Memory : public ::google::protobuf::Message {
 public:
  ReadMemoryRegionsResult_Memory();
  virtual ~ReadMemoryRegionsResult_Memory();

  ReadMemoryRegionsResult_Memory(const ReadMemoryRegionsResult_Memory& from);

  inline ReadMemoryRegionsResult_Memory& operator=(const ReadMemoryRegionsResult_Memory& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMemoryRegionsResult_Memory& default_instance();

  void Swap(ReadMemoryRegionsResult_Memory* other);

  // implements Message ----------------------------------------------

  ReadMemoryRegionsResult_Memory* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMemoryRegionsResult_Memory& from);
  void MergeFrom(const ReadMemoryRegionsResult_Memory& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 addr = 1;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 1;
  inline ::google::protobuf::uint64 addr() const;
  inline void set_addr(::google::protobuf::uint64 value);

  // required uint64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint64 size() const;
  inline void set_size(::google::protobuf::uint64 value);

  // required bytes mem = 3;
  inline bool has_mem() const;
  inline void clear_mem();
  static const int kMemFieldNumber = 3;
  inline const ::std::string& mem() const;
  inline void set_mem(const ::std::string& value);
  inline void set_mem(const char* value);
  inline void set_mem(const void* value, size_t size);
  inline ::std::string* mutable_mem();
  inline ::std::string* release_mem();
  inline void set_allocated_mem(::std::string* mem);

  // required uint32 protect = 4;
  inline bool has_protect() const;
  inline void clear_protect();
  static const int kProtectFieldNumber = 4;
  inline ::google::protobuf::uint32 protect() const;
  inline void set_protect(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.ReadMemoryRegionsResult.Memory)
 private:
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_mem();
  inline void clear_has_mem();
  inline void set_has_protect();
  inline void clear_has_protect();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 addr_;
  ::google::protobuf::uint64 size_;
  ::std::string* mem_;
  ::google::protobuf::uint32 protect_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static ReadMemoryRegionsResult_Memory* default_instance_;
};
// -------------------------------------------------------------------

class ReadMemoryRegionsResult : public ::google::protobuf::Message {
 public:
  ReadMemoryRegionsResult();
  virtual ~ReadMemoryRegionsResult();

  ReadMemoryRegionsResult(const ReadMemoryRegionsResult& from);

  inline ReadMemoryRegionsResult& operator=(const ReadMemoryRegionsResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReadMemoryRegionsResult& default_instance();

  void Swap(ReadMemoryRegionsResult* other);

  // implements Message ----------------------------------------------

  ReadMemoryRegionsResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReadMemoryRegionsResult& from);
  void MergeFrom(const ReadMemoryRegionsResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReadMemoryRegionsResult_Memory Memory;

  // accessors -------------------------------------------------------

  // repeated .rpc.ReadMemoryRegionsResult.Memory memories = 1;
  inline int memories_size() const;
  inline void clear_memories();
  static const int kMemoriesFieldNumber = 1;
  inline const ::rpc::ReadMemoryRegionsResult_Memory& memories(int index) const;
  inline ::rpc::ReadMemoryRegionsResult_Memory* mutable_memories(int index);
  inline ::rpc::ReadMemoryRegionsResult_Memory* add_memories();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsResult_Memory >&
      memories() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsResult_Memory >*
      mutable_memories();

  // @@protoc_insertion_point(class_scope:rpc.ReadMemoryRegionsResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsResult_Memory > memories_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static ReadMemoryRegionsResult* default_instance_;
};
// -------------------------------------------------------------------

class AnalyzeExternalRefsRequest : public ::google::protobuf::Message {
 public:
  AnalyzeExternalRefsRequest();
  virtual ~AnalyzeExternalRefsRequest();

  AnalyzeExternalRefsRequest(const AnalyzeExternalRefsRequest& from);

  inline AnalyzeExternalRefsRequest& operator=(const AnalyzeExternalRefsRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyzeExternalRefsRequest& default_instance();

  void Swap(AnalyzeExternalRefsRequest* other);

  // implements Message ----------------------------------------------

  AnalyzeExternalRefsRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnalyzeExternalRefsRequest& from);
  void MergeFrom(const AnalyzeExternalRefsRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ea_from = 1;
  inline bool has_ea_from() const;
  inline void clear_ea_from();
  static const int kEaFromFieldNumber = 1;
  inline ::google::protobuf::uint64 ea_from() const;
  inline void set_ea_from(::google::protobuf::uint64 value);

  // required uint64 ea_to = 2;
  inline bool has_ea_to() const;
  inline void clear_ea_to();
  static const int kEaToFieldNumber = 2;
  inline ::google::protobuf::uint64 ea_to() const;
  inline void set_ea_to(::google::protobuf::uint64 value);

  // required uint32 increment = 3;
  inline bool has_increment() const;
  inline void clear_increment();
  static const int kIncrementFieldNumber = 3;
  inline ::google::protobuf::uint32 increment() const;
  inline void set_increment(::google::protobuf::uint32 value);

  // required uint64 analysing_base = 4;
  inline bool has_analysing_base() const;
  inline void clear_analysing_base();
  static const int kAnalysingBaseFieldNumber = 4;
  inline ::google::protobuf::uint64 analysing_base() const;
  inline void set_analysing_base(::google::protobuf::uint64 value);

  // required uint64 analysing_size = 5;
  inline bool has_analysing_size() const;
  inline void clear_analysing_size();
  static const int kAnalysingSizeFieldNumber = 5;
  inline ::google::protobuf::uint64 analysing_size() const;
  inline void set_analysing_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.AnalyzeExternalRefsRequest)
 private:
  inline void set_has_ea_from();
  inline void clear_has_ea_from();
  inline void set_has_ea_to();
  inline void clear_has_ea_to();
  inline void set_has_increment();
  inline void clear_has_increment();
  inline void set_has_analysing_base();
  inline void clear_has_analysing_base();
  inline void set_has_analysing_size();
  inline void clear_has_analysing_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ea_from_;
  ::google::protobuf::uint64 ea_to_;
  ::google::protobuf::uint64 analysing_base_;
  ::google::protobuf::uint64 analysing_size_;
  ::google::protobuf::uint32 increment_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AnalyzeExternalRefsRequest* default_instance_;
};
// -------------------------------------------------------------------

class AnalyzeExternalRefsResult_PointerData : public ::google::protobuf::Message {
 public:
  AnalyzeExternalRefsResult_PointerData();
  virtual ~AnalyzeExternalRefsResult_PointerData();

  AnalyzeExternalRefsResult_PointerData(const AnalyzeExternalRefsResult_PointerData& from);

  inline AnalyzeExternalRefsResult_PointerData& operator=(const AnalyzeExternalRefsResult_PointerData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyzeExternalRefsResult_PointerData& default_instance();

  void Swap(AnalyzeExternalRefsResult_PointerData* other);

  // implements Message ----------------------------------------------

  AnalyzeExternalRefsResult_PointerData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnalyzeExternalRefsResult_PointerData& from);
  void MergeFrom(const AnalyzeExternalRefsResult_PointerData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ea = 1;
  inline bool has_ea() const;
  inline void clear_ea();
  static const int kEaFieldNumber = 1;
  inline ::google::protobuf::uint64 ea() const;
  inline void set_ea(::google::protobuf::uint64 value);

  // required string module = 2;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 2;
  inline const ::std::string& module() const;
  inline void set_module(const ::std::string& value);
  inline void set_module(const char* value);
  inline void set_module(const char* value, size_t size);
  inline ::std::string* mutable_module();
  inline ::std::string* release_module();
  inline void set_allocated_module(::std::string* module);

  // required string proc = 3;
  inline bool has_proc() const;
  inline void clear_proc();
  static const int kProcFieldNumber = 3;
  inline const ::std::string& proc() const;
  inline void set_proc(const ::std::string& value);
  inline void set_proc(const char* value);
  inline void set_proc(const char* value, size_t size);
  inline ::std::string* mutable_proc();
  inline ::std::string* release_proc();
  inline void set_allocated_proc(::std::string* proc);

  // optional string ordinal_collision_dll_path = 4;
  inline bool has_ordinal_collision_dll_path() const;
  inline void clear_ordinal_collision_dll_path();
  static const int kOrdinalCollisionDllPathFieldNumber = 4;
  inline const ::std::string& ordinal_collision_dll_path() const;
  inline void set_ordinal_collision_dll_path(const ::std::string& value);
  inline void set_ordinal_collision_dll_path(const char* value);
  inline void set_ordinal_collision_dll_path(const char* value, size_t size);
  inline ::std::string* mutable_ordinal_collision_dll_path();
  inline ::std::string* release_ordinal_collision_dll_path();
  inline void set_allocated_ordinal_collision_dll_path(::std::string* ordinal_collision_dll_path);

  // @@protoc_insertion_point(class_scope:rpc.AnalyzeExternalRefsResult.PointerData)
 private:
  inline void set_has_ea();
  inline void clear_has_ea();
  inline void set_has_module();
  inline void clear_has_module();
  inline void set_has_proc();
  inline void clear_has_proc();
  inline void set_has_ordinal_collision_dll_path();
  inline void clear_has_ordinal_collision_dll_path();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ea_;
  ::std::string* module_;
  ::std::string* proc_;
  ::std::string* ordinal_collision_dll_path_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AnalyzeExternalRefsResult_PointerData* default_instance_;
};
// -------------------------------------------------------------------

class AnalyzeExternalRefsResult_RefData : public ::google::protobuf::Message {
 public:
  AnalyzeExternalRefsResult_RefData();
  virtual ~AnalyzeExternalRefsResult_RefData();

  AnalyzeExternalRefsResult_RefData(const AnalyzeExternalRefsResult_RefData& from);

  inline AnalyzeExternalRefsResult_RefData& operator=(const AnalyzeExternalRefsResult_RefData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyzeExternalRefsResult_RefData& default_instance();

  void Swap(AnalyzeExternalRefsResult_RefData* other);

  // implements Message ----------------------------------------------

  AnalyzeExternalRefsResult_RefData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnalyzeExternalRefsResult_RefData& from);
  void MergeFrom(const AnalyzeExternalRefsResult_RefData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AnalyzeExternalRefsResult_RefData_RefType RefType;
  static const RefType REFT_JMPCONST = AnalyzeExternalRefsResult_RefData_RefType_REFT_JMPCONST;
  static const RefType REFT_IMMCONST = AnalyzeExternalRefsResult_RefData_RefType_REFT_IMMCONST;
  static const RefType REFT_ADDRCONST = AnalyzeExternalRefsResult_RefData_RefType_REFT_ADDRCONST;
  static inline bool RefType_IsValid(int value) {
    return AnalyzeExternalRefsResult_RefData_RefType_IsValid(value);
  }
  static const RefType RefType_MIN =
    AnalyzeExternalRefsResult_RefData_RefType_RefType_MIN;
  static const RefType RefType_MAX =
    AnalyzeExternalRefsResult_RefData_RefType_RefType_MAX;
  static const int RefType_ARRAYSIZE =
    AnalyzeExternalRefsResult_RefData_RefType_RefType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  RefType_descriptor() {
    return AnalyzeExternalRefsResult_RefData_RefType_descriptor();
  }
  static inline const ::std::string& RefType_Name(RefType value) {
    return AnalyzeExternalRefsResult_RefData_RefType_Name(value);
  }
  static inline bool RefType_Parse(const ::std::string& name,
      RefType* value) {
    return AnalyzeExternalRefsResult_RefData_RefType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint64 ea = 1;
  inline bool has_ea() const;
  inline void clear_ea();
  static const int kEaFieldNumber = 1;
  inline ::google::protobuf::uint64 ea() const;
  inline void set_ea(::google::protobuf::uint64 value);

  // required uint64 len = 2;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 2;
  inline ::google::protobuf::uint64 len() const;
  inline void set_len(::google::protobuf::uint64 value);

  // required string dis = 3;
  inline bool has_dis() const;
  inline void clear_dis();
  static const int kDisFieldNumber = 3;
  inline const ::std::string& dis() const;
  inline void set_dis(const ::std::string& value);
  inline void set_dis(const char* value);
  inline void set_dis(const char* value, size_t size);
  inline ::std::string* mutable_dis();
  inline ::std::string* release_dis();
  inline void set_allocated_dis(::std::string* dis);

  // required uint64 v = 4;
  inline bool has_v() const;
  inline void clear_v();
  static const int kVFieldNumber = 4;
  inline ::google::protobuf::uint64 v() const;
  inline void set_v(::google::protobuf::uint64 value);

  // required .rpc.AnalyzeExternalRefsResult.RefData.RefType ref_type = 5;
  inline bool has_ref_type() const;
  inline void clear_ref_type();
  static const int kRefTypeFieldNumber = 5;
  inline ::rpc::AnalyzeExternalRefsResult_RefData_RefType ref_type() const;
  inline void set_ref_type(::rpc::AnalyzeExternalRefsResult_RefData_RefType value);

  // required string module = 6;
  inline bool has_module() const;
  inline void clear_module();
  static const int kModuleFieldNumber = 6;
  inline const ::std::string& module() const;
  inline void set_module(const ::std::string& value);
  inline void set_module(const char* value);
  inline void set_module(const char* value, size_t size);
  inline ::std::string* mutable_module();
  inline ::std::string* release_module();
  inline void set_allocated_module(::std::string* module);

  // required string proc = 7;
  inline bool has_proc() const;
  inline void clear_proc();
  static const int kProcFieldNumber = 7;
  inline const ::std::string& proc() const;
  inline void set_proc(const ::std::string& value);
  inline void set_proc(const char* value);
  inline void set_proc(const char* value, size_t size);
  inline ::std::string* mutable_proc();
  inline ::std::string* release_proc();
  inline void set_allocated_proc(::std::string* proc);

  // optional string ordinal_collision_dll_path = 8;
  inline bool has_ordinal_collision_dll_path() const;
  inline void clear_ordinal_collision_dll_path();
  static const int kOrdinalCollisionDllPathFieldNumber = 8;
  inline const ::std::string& ordinal_collision_dll_path() const;
  inline void set_ordinal_collision_dll_path(const ::std::string& value);
  inline void set_ordinal_collision_dll_path(const char* value);
  inline void set_ordinal_collision_dll_path(const char* value, size_t size);
  inline ::std::string* mutable_ordinal_collision_dll_path();
  inline ::std::string* release_ordinal_collision_dll_path();
  inline void set_allocated_ordinal_collision_dll_path(::std::string* ordinal_collision_dll_path);

  // @@protoc_insertion_point(class_scope:rpc.AnalyzeExternalRefsResult.RefData)
 private:
  inline void set_has_ea();
  inline void clear_has_ea();
  inline void set_has_len();
  inline void clear_has_len();
  inline void set_has_dis();
  inline void clear_has_dis();
  inline void set_has_v();
  inline void clear_has_v();
  inline void set_has_ref_type();
  inline void clear_has_ref_type();
  inline void set_has_module();
  inline void clear_has_module();
  inline void set_has_proc();
  inline void clear_has_proc();
  inline void set_has_ordinal_collision_dll_path();
  inline void clear_has_ordinal_collision_dll_path();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ea_;
  ::google::protobuf::uint64 len_;
  ::std::string* dis_;
  ::google::protobuf::uint64 v_;
  ::std::string* module_;
  ::std::string* proc_;
  ::std::string* ordinal_collision_dll_path_;
  int ref_type_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AnalyzeExternalRefsResult_RefData* default_instance_;
};
// -------------------------------------------------------------------

class AnalyzeExternalRefsResult_reg_t : public ::google::protobuf::Message {
 public:
  AnalyzeExternalRefsResult_reg_t();
  virtual ~AnalyzeExternalRefsResult_reg_t();

  AnalyzeExternalRefsResult_reg_t(const AnalyzeExternalRefsResult_reg_t& from);

  inline AnalyzeExternalRefsResult_reg_t& operator=(const AnalyzeExternalRefsResult_reg_t& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyzeExternalRefsResult_reg_t& default_instance();

  void Swap(AnalyzeExternalRefsResult_reg_t* other);

  // implements Message ----------------------------------------------

  AnalyzeExternalRefsResult_reg_t* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnalyzeExternalRefsResult_reg_t& from);
  void MergeFrom(const AnalyzeExternalRefsResult_reg_t& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 eax = 1;
  inline bool has_eax() const;
  inline void clear_eax();
  static const int kEaxFieldNumber = 1;
  inline ::google::protobuf::uint32 eax() const;
  inline void set_eax(::google::protobuf::uint32 value);

  // required uint32 ecx = 2;
  inline bool has_ecx() const;
  inline void clear_ecx();
  static const int kEcxFieldNumber = 2;
  inline ::google::protobuf::uint32 ecx() const;
  inline void set_ecx(::google::protobuf::uint32 value);

  // required uint32 edx = 3;
  inline bool has_edx() const;
  inline void clear_edx();
  static const int kEdxFieldNumber = 3;
  inline ::google::protobuf::uint32 edx() const;
  inline void set_edx(::google::protobuf::uint32 value);

  // required uint32 ebx = 4;
  inline bool has_ebx() const;
  inline void clear_ebx();
  static const int kEbxFieldNumber = 4;
  inline ::google::protobuf::uint32 ebx() const;
  inline void set_ebx(::google::protobuf::uint32 value);

  // required uint32 esp = 5;
  inline bool has_esp() const;
  inline void clear_esp();
  static const int kEspFieldNumber = 5;
  inline ::google::protobuf::uint32 esp() const;
  inline void set_esp(::google::protobuf::uint32 value);

  // required uint32 ebp = 6;
  inline bool has_ebp() const;
  inline void clear_ebp();
  static const int kEbpFieldNumber = 6;
  inline ::google::protobuf::uint32 ebp() const;
  inline void set_ebp(::google::protobuf::uint32 value);

  // required uint32 esi = 7;
  inline bool has_esi() const;
  inline void clear_esi();
  static const int kEsiFieldNumber = 7;
  inline ::google::protobuf::uint32 esi() const;
  inline void set_esi(::google::protobuf::uint32 value);

  // required uint32 edi = 8;
  inline bool has_edi() const;
  inline void clear_edi();
  static const int kEdiFieldNumber = 8;
  inline ::google::protobuf::uint32 edi() const;
  inline void set_edi(::google::protobuf::uint32 value);

  // required uint64 rip = 9;
  inline bool has_rip() const;
  inline void clear_rip();
  static const int kRipFieldNumber = 9;
  inline ::google::protobuf::uint64 rip() const;
  inline void set_rip(::google::protobuf::uint64 value);

  // optional uint64 rax = 10;
  inline bool has_rax() const;
  inline void clear_rax();
  static const int kRaxFieldNumber = 10;
  inline ::google::protobuf::uint64 rax() const;
  inline void set_rax(::google::protobuf::uint64 value);

  // optional uint64 rbx = 11;
  inline bool has_rbx() const;
  inline void clear_rbx();
  static const int kRbxFieldNumber = 11;
  inline ::google::protobuf::uint64 rbx() const;
  inline void set_rbx(::google::protobuf::uint64 value);

  // optional uint64 rcx = 12;
  inline bool has_rcx() const;
  inline void clear_rcx();
  static const int kRcxFieldNumber = 12;
  inline ::google::protobuf::uint64 rcx() const;
  inline void set_rcx(::google::protobuf::uint64 value);

  // optional uint64 rdx = 13;
  inline bool has_rdx() const;
  inline void clear_rdx();
  static const int kRdxFieldNumber = 13;
  inline ::google::protobuf::uint64 rdx() const;
  inline void set_rdx(::google::protobuf::uint64 value);

  // optional uint64 rsi = 14;
  inline bool has_rsi() const;
  inline void clear_rsi();
  static const int kRsiFieldNumber = 14;
  inline ::google::protobuf::uint64 rsi() const;
  inline void set_rsi(::google::protobuf::uint64 value);

  // optional uint64 rdi = 15;
  inline bool has_rdi() const;
  inline void clear_rdi();
  static const int kRdiFieldNumber = 15;
  inline ::google::protobuf::uint64 rdi() const;
  inline void set_rdi(::google::protobuf::uint64 value);

  // optional uint64 rbp = 16;
  inline bool has_rbp() const;
  inline void clear_rbp();
  static const int kRbpFieldNumber = 16;
  inline ::google::protobuf::uint64 rbp() const;
  inline void set_rbp(::google::protobuf::uint64 value);

  // optional uint64 rsp = 17;
  inline bool has_rsp() const;
  inline void clear_rsp();
  static const int kRspFieldNumber = 17;
  inline ::google::protobuf::uint64 rsp() const;
  inline void set_rsp(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.AnalyzeExternalRefsResult.reg_t)
 private:
  inline void set_has_eax();
  inline void clear_has_eax();
  inline void set_has_ecx();
  inline void clear_has_ecx();
  inline void set_has_edx();
  inline void clear_has_edx();
  inline void set_has_ebx();
  inline void clear_has_ebx();
  inline void set_has_esp();
  inline void clear_has_esp();
  inline void set_has_ebp();
  inline void clear_has_ebp();
  inline void set_has_esi();
  inline void clear_has_esi();
  inline void set_has_edi();
  inline void clear_has_edi();
  inline void set_has_rip();
  inline void clear_has_rip();
  inline void set_has_rax();
  inline void clear_has_rax();
  inline void set_has_rbx();
  inline void clear_has_rbx();
  inline void set_has_rcx();
  inline void clear_has_rcx();
  inline void set_has_rdx();
  inline void clear_has_rdx();
  inline void set_has_rsi();
  inline void clear_has_rsi();
  inline void set_has_rdi();
  inline void clear_has_rdi();
  inline void set_has_rbp();
  inline void clear_has_rbp();
  inline void set_has_rsp();
  inline void clear_has_rsp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 eax_;
  ::google::protobuf::uint32 ecx_;
  ::google::protobuf::uint32 edx_;
  ::google::protobuf::uint32 ebx_;
  ::google::protobuf::uint32 esp_;
  ::google::protobuf::uint32 ebp_;
  ::google::protobuf::uint32 esi_;
  ::google::protobuf::uint32 edi_;
  ::google::protobuf::uint64 rip_;
  ::google::protobuf::uint64 rax_;
  ::google::protobuf::uint64 rbx_;
  ::google::protobuf::uint64 rcx_;
  ::google::protobuf::uint64 rdx_;
  ::google::protobuf::uint64 rsi_;
  ::google::protobuf::uint64 rdi_;
  ::google::protobuf::uint64 rbp_;
  ::google::protobuf::uint64 rsp_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AnalyzeExternalRefsResult_reg_t* default_instance_;
};
// -------------------------------------------------------------------

class AnalyzeExternalRefsResult : public ::google::protobuf::Message {
 public:
  AnalyzeExternalRefsResult();
  virtual ~AnalyzeExternalRefsResult();

  AnalyzeExternalRefsResult(const AnalyzeExternalRefsResult& from);

  inline AnalyzeExternalRefsResult& operator=(const AnalyzeExternalRefsResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AnalyzeExternalRefsResult& default_instance();

  void Swap(AnalyzeExternalRefsResult* other);

  // implements Message ----------------------------------------------

  AnalyzeExternalRefsResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AnalyzeExternalRefsResult& from);
  void MergeFrom(const AnalyzeExternalRefsResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AnalyzeExternalRefsResult_PointerData PointerData;
  typedef AnalyzeExternalRefsResult_RefData RefData;
  typedef AnalyzeExternalRefsResult_reg_t reg_t;

  // accessors -------------------------------------------------------

  // repeated .rpc.AnalyzeExternalRefsResult.PointerData api_constants = 1;
  inline int api_constants_size() const;
  inline void clear_api_constants();
  static const int kApiConstantsFieldNumber = 1;
  inline const ::rpc::AnalyzeExternalRefsResult_PointerData& api_constants(int index) const;
  inline ::rpc::AnalyzeExternalRefsResult_PointerData* mutable_api_constants(int index);
  inline ::rpc::AnalyzeExternalRefsResult_PointerData* add_api_constants();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_PointerData >&
      api_constants() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_PointerData >*
      mutable_api_constants();

  // repeated .rpc.AnalyzeExternalRefsResult.RefData refs = 2;
  inline int refs_size() const;
  inline void clear_refs();
  static const int kRefsFieldNumber = 2;
  inline const ::rpc::AnalyzeExternalRefsResult_RefData& refs(int index) const;
  inline ::rpc::AnalyzeExternalRefsResult_RefData* mutable_refs(int index);
  inline ::rpc::AnalyzeExternalRefsResult_RefData* add_refs();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_RefData >&
      refs() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_RefData >*
      mutable_refs();

  // required .rpc.AnalyzeExternalRefsResult.reg_t context = 3;
  inline bool has_context() const;
  inline void clear_context();
  static const int kContextFieldNumber = 3;
  inline const ::rpc::AnalyzeExternalRefsResult_reg_t& context() const;
  inline ::rpc::AnalyzeExternalRefsResult_reg_t* mutable_context();
  inline ::rpc::AnalyzeExternalRefsResult_reg_t* release_context();
  inline void set_allocated_context(::rpc::AnalyzeExternalRefsResult_reg_t* context);

  // @@protoc_insertion_point(class_scope:rpc.AnalyzeExternalRefsResult)
 private:
  inline void set_has_context();
  inline void clear_has_context();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_PointerData > api_constants_;
  ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_RefData > refs_;
  ::rpc::AnalyzeExternalRefsResult_reg_t* context_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AnalyzeExternalRefsResult* default_instance_;
};
// -------------------------------------------------------------------

class CheckPEHeadersRequest : public ::google::protobuf::Message {
 public:
  CheckPEHeadersRequest();
  virtual ~CheckPEHeadersRequest();

  CheckPEHeadersRequest(const CheckPEHeadersRequest& from);

  inline CheckPEHeadersRequest& operator=(const CheckPEHeadersRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPEHeadersRequest& default_instance();

  void Swap(CheckPEHeadersRequest* other);

  // implements Message ----------------------------------------------

  CheckPEHeadersRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckPEHeadersRequest& from);
  void MergeFrom(const CheckPEHeadersRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 base = 1;
  inline bool has_base() const;
  inline void clear_base();
  static const int kBaseFieldNumber = 1;
  inline ::google::protobuf::uint64 base() const;
  inline void set_base(::google::protobuf::uint64 value);

  // required uint64 size = 2;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 2;
  inline ::google::protobuf::uint64 size() const;
  inline void set_size(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:rpc.CheckPEHeadersRequest)
 private:
  inline void set_has_base();
  inline void clear_has_base();
  inline void set_has_size();
  inline void clear_has_size();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 base_;
  ::google::protobuf::uint64 size_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static CheckPEHeadersRequest* default_instance_;
};
// -------------------------------------------------------------------

class CheckPEHeadersResult_Exports : public ::google::protobuf::Message {
 public:
  CheckPEHeadersResult_Exports();
  virtual ~CheckPEHeadersResult_Exports();

  CheckPEHeadersResult_Exports(const CheckPEHeadersResult_Exports& from);

  inline CheckPEHeadersResult_Exports& operator=(const CheckPEHeadersResult_Exports& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPEHeadersResult_Exports& default_instance();

  void Swap(CheckPEHeadersResult_Exports* other);

  // implements Message ----------------------------------------------

  CheckPEHeadersResult_Exports* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckPEHeadersResult_Exports& from);
  void MergeFrom(const CheckPEHeadersResult_Exports& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint64 ea = 1;
  inline bool has_ea() const;
  inline void clear_ea();
  static const int kEaFieldNumber = 1;
  inline ::google::protobuf::uint64 ea() const;
  inline void set_ea(::google::protobuf::uint64 value);

  // required uint64 ord = 2;
  inline bool has_ord() const;
  inline void clear_ord();
  static const int kOrdFieldNumber = 2;
  inline ::google::protobuf::uint64 ord() const;
  inline void set_ord(::google::protobuf::uint64 value);

  // optional string name = 3;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 3;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:rpc.CheckPEHeadersResult.Exports)
 private:
  inline void set_has_ea();
  inline void clear_has_ea();
  inline void set_has_ord();
  inline void clear_has_ord();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 ea_;
  ::google::protobuf::uint64 ord_;
  ::std::string* name_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static CheckPEHeadersResult_Exports* default_instance_;
};
// -------------------------------------------------------------------

class CheckPEHeadersResult_Section : public ::google::protobuf::Message {
 public:
  CheckPEHeadersResult_Section();
  virtual ~CheckPEHeadersResult_Section();

  CheckPEHeadersResult_Section(const CheckPEHeadersResult_Section& from);

  inline CheckPEHeadersResult_Section& operator=(const CheckPEHeadersResult_Section& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPEHeadersResult_Section& default_instance();

  void Swap(CheckPEHeadersResult_Section* other);

  // implements Message ----------------------------------------------

  CheckPEHeadersResult_Section* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckPEHeadersResult_Section& from);
  void MergeFrom(const CheckPEHeadersResult_Section& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional uint64 va = 2;
  inline bool has_va() const;
  inline void clear_va();
  static const int kVaFieldNumber = 2;
  inline ::google::protobuf::uint64 va() const;
  inline void set_va(::google::protobuf::uint64 value);

  // optional uint64 v_size = 3;
  inline bool has_v_size() const;
  inline void clear_v_size();
  static const int kVSizeFieldNumber = 3;
  inline ::google::protobuf::uint64 v_size() const;
  inline void set_v_size(::google::protobuf::uint64 value);

  // optional uint64 raw = 4;
  inline bool has_raw() const;
  inline void clear_raw();
  static const int kRawFieldNumber = 4;
  inline ::google::protobuf::uint64 raw() const;
  inline void set_raw(::google::protobuf::uint64 value);

  // optional uint64 raw_size = 5;
  inline bool has_raw_size() const;
  inline void clear_raw_size();
  static const int kRawSizeFieldNumber = 5;
  inline ::google::protobuf::uint64 raw_size() const;
  inline void set_raw_size(::google::protobuf::uint64 value);

  // optional uint32 characteristics = 6;
  inline bool has_characteristics() const;
  inline void clear_characteristics();
  static const int kCharacteristicsFieldNumber = 6;
  inline ::google::protobuf::uint32 characteristics() const;
  inline void set_characteristics(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:rpc.CheckPEHeadersResult.Section)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_va();
  inline void clear_has_va();
  inline void set_has_v_size();
  inline void clear_has_v_size();
  inline void set_has_raw();
  inline void clear_has_raw();
  inline void set_has_raw_size();
  inline void clear_has_raw_size();
  inline void set_has_characteristics();
  inline void clear_has_characteristics();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint64 va_;
  ::google::protobuf::uint64 v_size_;
  ::google::protobuf::uint64 raw_;
  ::google::protobuf::uint64 raw_size_;
  ::google::protobuf::uint32 characteristics_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static CheckPEHeadersResult_Section* default_instance_;
};
// -------------------------------------------------------------------

class CheckPEHeadersResult : public ::google::protobuf::Message {
 public:
  CheckPEHeadersResult();
  virtual ~CheckPEHeadersResult();

  CheckPEHeadersResult(const CheckPEHeadersResult& from);

  inline CheckPEHeadersResult& operator=(const CheckPEHeadersResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CheckPEHeadersResult& default_instance();

  void Swap(CheckPEHeadersResult* other);

  // implements Message ----------------------------------------------

  CheckPEHeadersResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CheckPEHeadersResult& from);
  void MergeFrom(const CheckPEHeadersResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CheckPEHeadersResult_Exports Exports;
  typedef CheckPEHeadersResult_Section Section;

  // accessors -------------------------------------------------------

  // required bool pe_valid = 1;
  inline bool has_pe_valid() const;
  inline void clear_pe_valid();
  static const int kPeValidFieldNumber = 1;
  inline bool pe_valid() const;
  inline void set_pe_valid(bool value);

  // repeated .rpc.CheckPEHeadersResult.Exports exps = 2;
  inline int exps_size() const;
  inline void clear_exps();
  static const int kExpsFieldNumber = 2;
  inline const ::rpc::CheckPEHeadersResult_Exports& exps(int index) const;
  inline ::rpc::CheckPEHeadersResult_Exports* mutable_exps(int index);
  inline ::rpc::CheckPEHeadersResult_Exports* add_exps();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Exports >&
      exps() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Exports >*
      mutable_exps();

  // repeated .rpc.CheckPEHeadersResult.Section sections = 3;
  inline int sections_size() const;
  inline void clear_sections();
  static const int kSectionsFieldNumber = 3;
  inline const ::rpc::CheckPEHeadersResult_Section& sections(int index) const;
  inline ::rpc::CheckPEHeadersResult_Section* mutable_sections(int index);
  inline ::rpc::CheckPEHeadersResult_Section* add_sections();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Section >&
      sections() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Section >*
      mutable_sections();

  // @@protoc_insertion_point(class_scope:rpc.CheckPEHeadersResult)
 private:
  inline void set_has_pe_valid();
  inline void clear_has_pe_valid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Exports > exps_;
  ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Section > sections_;
  bool pe_valid_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static CheckPEHeadersResult* default_instance_;
};
// -------------------------------------------------------------------

class GetBackendInfoResult : public ::google::protobuf::Message {
 public:
  GetBackendInfoResult();
  virtual ~GetBackendInfoResult();

  GetBackendInfoResult(const GetBackendInfoResult& from);

  inline GetBackendInfoResult& operator=(const GetBackendInfoResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetBackendInfoResult& default_instance();

  void Swap(GetBackendInfoResult* other);

  // implements Message ----------------------------------------------

  GetBackendInfoResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetBackendInfoResult& from);
  void MergeFrom(const GetBackendInfoResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 bitness = 1;
  inline bool has_bitness() const;
  inline void clear_bitness();
  static const int kBitnessFieldNumber = 1;
  inline ::google::protobuf::uint32 bitness() const;
  inline void set_bitness(::google::protobuf::uint32 value);

  // required string dbg_name = 2;
  inline bool has_dbg_name() const;
  inline void clear_dbg_name();
  static const int kDbgNameFieldNumber = 2;
  inline const ::std::string& dbg_name() const;
  inline void set_dbg_name(const ::std::string& value);
  inline void set_dbg_name(const char* value);
  inline void set_dbg_name(const char* value, size_t size);
  inline ::std::string* mutable_dbg_name();
  inline ::std::string* release_dbg_name();
  inline void set_allocated_dbg_name(::std::string* dbg_name);

  // optional string dbg_ver = 3;
  inline bool has_dbg_ver() const;
  inline void clear_dbg_ver();
  static const int kDbgVerFieldNumber = 3;
  inline const ::std::string& dbg_ver() const;
  inline void set_dbg_ver(const ::std::string& value);
  inline void set_dbg_ver(const char* value);
  inline void set_dbg_ver(const char* value, size_t size);
  inline ::std::string* mutable_dbg_ver();
  inline ::std::string* release_dbg_ver();
  inline void set_allocated_dbg_ver(::std::string* dbg_ver);

  // required string labeless_ver = 4;
  inline bool has_labeless_ver() const;
  inline void clear_labeless_ver();
  static const int kLabelessVerFieldNumber = 4;
  inline const ::std::string& labeless_ver() const;
  inline void set_labeless_ver(const ::std::string& value);
  inline void set_labeless_ver(const char* value);
  inline void set_labeless_ver(const char* value, size_t size);
  inline ::std::string* mutable_labeless_ver();
  inline ::std::string* release_labeless_ver();
  inline void set_allocated_labeless_ver(::std::string* labeless_ver);

  // @@protoc_insertion_point(class_scope:rpc.GetBackendInfoResult)
 private:
  inline void set_has_bitness();
  inline void clear_has_bitness();
  inline void set_has_dbg_name();
  inline void clear_has_dbg_name();
  inline void set_has_dbg_ver();
  inline void clear_has_dbg_ver();
  inline void set_has_labeless_ver();
  inline void clear_has_labeless_ver();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* dbg_name_;
  ::std::string* dbg_ver_;
  ::std::string* labeless_ver_;
  ::google::protobuf::uint32 bitness_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static GetBackendInfoResult* default_instance_;
};
// -------------------------------------------------------------------

class AutoCompleteCodeRequest : public ::google::protobuf::Message {
 public:
  AutoCompleteCodeRequest();
  virtual ~AutoCompleteCodeRequest();

  AutoCompleteCodeRequest(const AutoCompleteCodeRequest& from);

  inline AutoCompleteCodeRequest& operator=(const AutoCompleteCodeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoCompleteCodeRequest& default_instance();

  void Swap(AutoCompleteCodeRequest* other);

  // implements Message ----------------------------------------------

  AutoCompleteCodeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoCompleteCodeRequest& from);
  void MergeFrom(const AutoCompleteCodeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string source = 1;
  inline bool has_source() const;
  inline void clear_source();
  static const int kSourceFieldNumber = 1;
  inline const ::std::string& source() const;
  inline void set_source(const ::std::string& value);
  inline void set_source(const char* value);
  inline void set_source(const char* value, size_t size);
  inline ::std::string* mutable_source();
  inline ::std::string* release_source();
  inline void set_allocated_source(::std::string* source);

  // required uint32 zline = 2;
  inline bool has_zline() const;
  inline void clear_zline();
  static const int kZlineFieldNumber = 2;
  inline ::google::protobuf::uint32 zline() const;
  inline void set_zline(::google::protobuf::uint32 value);

  // required uint32 zcol = 3;
  inline bool has_zcol() const;
  inline void clear_zcol();
  static const int kZcolFieldNumber = 3;
  inline ::google::protobuf::uint32 zcol() const;
  inline void set_zcol(::google::protobuf::uint32 value);

  // required bool call_sig_only = 4;
  inline bool has_call_sig_only() const;
  inline void clear_call_sig_only();
  static const int kCallSigOnlyFieldNumber = 4;
  inline bool call_sig_only() const;
  inline void set_call_sig_only(bool value);

  // @@protoc_insertion_point(class_scope:rpc.AutoCompleteCodeRequest)
 private:
  inline void set_has_source();
  inline void clear_has_source();
  inline void set_has_zline();
  inline void clear_has_zline();
  inline void set_has_zcol();
  inline void clear_has_zcol();
  inline void set_has_call_sig_only();
  inline void clear_has_call_sig_only();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* source_;
  ::google::protobuf::uint32 zline_;
  ::google::protobuf::uint32 zcol_;
  bool call_sig_only_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AutoCompleteCodeRequest* default_instance_;
};
// -------------------------------------------------------------------

class AutoCompleteCodeResult_CallSignature_Param : public ::google::protobuf::Message {
 public:
  AutoCompleteCodeResult_CallSignature_Param();
  virtual ~AutoCompleteCodeResult_CallSignature_Param();

  AutoCompleteCodeResult_CallSignature_Param(const AutoCompleteCodeResult_CallSignature_Param& from);

  inline AutoCompleteCodeResult_CallSignature_Param& operator=(const AutoCompleteCodeResult_CallSignature_Param& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoCompleteCodeResult_CallSignature_Param& default_instance();

  void Swap(AutoCompleteCodeResult_CallSignature_Param* other);

  // implements Message ----------------------------------------------

  AutoCompleteCodeResult_CallSignature_Param* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoCompleteCodeResult_CallSignature_Param& from);
  void MergeFrom(const AutoCompleteCodeResult_CallSignature_Param& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string description = 2;
  inline bool has_description() const;
  inline void clear_description();
  static const int kDescriptionFieldNumber = 2;
  inline const ::std::string& description() const;
  inline void set_description(const ::std::string& value);
  inline void set_description(const char* value);
  inline void set_description(const char* value, size_t size);
  inline ::std::string* mutable_description();
  inline ::std::string* release_description();
  inline void set_allocated_description(::std::string* description);

  // @@protoc_insertion_point(class_scope:rpc.AutoCompleteCodeResult.CallSignature.Param)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_description();
  inline void clear_has_description();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::std::string* description_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AutoCompleteCodeResult_CallSignature_Param* default_instance_;
};
// -------------------------------------------------------------------

class AutoCompleteCodeResult_CallSignature : public ::google::protobuf::Message {
 public:
  AutoCompleteCodeResult_CallSignature();
  virtual ~AutoCompleteCodeResult_CallSignature();

  AutoCompleteCodeResult_CallSignature(const AutoCompleteCodeResult_CallSignature& from);

  inline AutoCompleteCodeResult_CallSignature& operator=(const AutoCompleteCodeResult_CallSignature& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoCompleteCodeResult_CallSignature& default_instance();

  void Swap(AutoCompleteCodeResult_CallSignature* other);

  // implements Message ----------------------------------------------

  AutoCompleteCodeResult_CallSignature* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoCompleteCodeResult_CallSignature& from);
  void MergeFrom(const AutoCompleteCodeResult_CallSignature& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AutoCompleteCodeResult_CallSignature_Param Param;

  // accessors -------------------------------------------------------

  // optional string cs_type = 1;
  inline bool has_cs_type() const;
  inline void clear_cs_type();
  static const int kCsTypeFieldNumber = 1;
  inline const ::std::string& cs_type() const;
  inline void set_cs_type(const ::std::string& value);
  inline void set_cs_type(const char* value);
  inline void set_cs_type(const char* value, size_t size);
  inline ::std::string* mutable_cs_type();
  inline ::std::string* release_cs_type();
  inline void set_allocated_cs_type(::std::string* cs_type);

  // required string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // required int32 index = 3;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 3;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);

  // optional string raw_doc = 4;
  inline bool has_raw_doc() const;
  inline void clear_raw_doc();
  static const int kRawDocFieldNumber = 4;
  inline const ::std::string& raw_doc() const;
  inline void set_raw_doc(const ::std::string& value);
  inline void set_raw_doc(const char* value);
  inline void set_raw_doc(const char* value, size_t size);
  inline ::std::string* mutable_raw_doc();
  inline ::std::string* release_raw_doc();
  inline void set_allocated_raw_doc(::std::string* raw_doc);

  // repeated .rpc.AutoCompleteCodeResult.CallSignature.Param params = 5;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 5;
  inline const ::rpc::AutoCompleteCodeResult_CallSignature_Param& params(int index) const;
  inline ::rpc::AutoCompleteCodeResult_CallSignature_Param* mutable_params(int index);
  inline ::rpc::AutoCompleteCodeResult_CallSignature_Param* add_params();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature_Param >&
      params() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature_Param >*
      mutable_params();

  // @@protoc_insertion_point(class_scope:rpc.AutoCompleteCodeResult.CallSignature)
 private:
  inline void set_has_cs_type();
  inline void clear_has_cs_type();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_raw_doc();
  inline void clear_has_raw_doc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* cs_type_;
  ::std::string* name_;
  ::std::string* raw_doc_;
  ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature_Param > params_;
  ::google::protobuf::int32 index_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AutoCompleteCodeResult_CallSignature* default_instance_;
};
// -------------------------------------------------------------------

class AutoCompleteCodeResult : public ::google::protobuf::Message {
 public:
  AutoCompleteCodeResult();
  virtual ~AutoCompleteCodeResult();

  AutoCompleteCodeResult(const AutoCompleteCodeResult& from);

  inline AutoCompleteCodeResult& operator=(const AutoCompleteCodeResult& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoCompleteCodeResult& default_instance();

  void Swap(AutoCompleteCodeResult* other);

  // implements Message ----------------------------------------------

  AutoCompleteCodeResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoCompleteCodeResult& from);
  void MergeFrom(const AutoCompleteCodeResult& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef AutoCompleteCodeResult_CallSignature CallSignature;

  // accessors -------------------------------------------------------

  // repeated string completions = 1;
  inline int completions_size() const;
  inline void clear_completions();
  static const int kCompletionsFieldNumber = 1;
  inline const ::std::string& completions(int index) const;
  inline ::std::string* mutable_completions(int index);
  inline void set_completions(int index, const ::std::string& value);
  inline void set_completions(int index, const char* value);
  inline void set_completions(int index, const char* value, size_t size);
  inline ::std::string* add_completions();
  inline void add_completions(const ::std::string& value);
  inline void add_completions(const char* value);
  inline void add_completions(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& completions() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_completions();

  // repeated .rpc.AutoCompleteCodeResult.CallSignature call_sigs = 2;
  inline int call_sigs_size() const;
  inline void clear_call_sigs();
  static const int kCallSigsFieldNumber = 2;
  inline const ::rpc::AutoCompleteCodeResult_CallSignature& call_sigs(int index) const;
  inline ::rpc::AutoCompleteCodeResult_CallSignature* mutable_call_sigs(int index);
  inline ::rpc::AutoCompleteCodeResult_CallSignature* add_call_sigs();
  inline const ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature >&
      call_sigs() const;
  inline ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature >*
      mutable_call_sigs();

  // @@protoc_insertion_point(class_scope:rpc.AutoCompleteCodeResult)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::std::string> completions_;
  ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature > call_sigs_;
  friend void  protobuf_AddDesc_rpc_2eproto();
  friend void protobuf_AssignDesc_rpc_2eproto();
  friend void protobuf_ShutdownFile_rpc_2eproto();

  void InitAsDefaultInstance();
  static AutoCompleteCodeResult* default_instance_;
};
// ===================================================================


// ===================================================================

// RpcRequest

// required .rpc.RpcRequest.RequestType request_type = 1;
inline bool RpcRequest::has_request_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RpcRequest::set_has_request_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RpcRequest::clear_has_request_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RpcRequest::clear_request_type() {
  request_type_ = 0;
  clear_has_request_type();
}
inline ::rpc::RpcRequest_RequestType RpcRequest::request_type() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.request_type)
  return static_cast< ::rpc::RpcRequest_RequestType >(request_type_);
}
inline void RpcRequest::set_request_type(::rpc::RpcRequest_RequestType value) {
  assert(::rpc::RpcRequest_RequestType_IsValid(value));
  set_has_request_type();
  request_type_ = value;
  // @@protoc_insertion_point(field_set:rpc.RpcRequest.request_type)
}

// optional .rpc.MakeNamesRequest make_names_req = 2;
inline bool RpcRequest::has_make_names_req() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RpcRequest::set_has_make_names_req() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RpcRequest::clear_has_make_names_req() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RpcRequest::clear_make_names_req() {
  if (make_names_req_ != NULL) make_names_req_->::rpc::MakeNamesRequest::Clear();
  clear_has_make_names_req();
}
inline const ::rpc::MakeNamesRequest& RpcRequest::make_names_req() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.make_names_req)
  return make_names_req_ != NULL ? *make_names_req_ : *default_instance_->make_names_req_;
}
inline ::rpc::MakeNamesRequest* RpcRequest::mutable_make_names_req() {
  set_has_make_names_req();
  if (make_names_req_ == NULL) make_names_req_ = new ::rpc::MakeNamesRequest;
  // @@protoc_insertion_point(field_mutable:rpc.RpcRequest.make_names_req)
  return make_names_req_;
}
inline ::rpc::MakeNamesRequest* RpcRequest::release_make_names_req() {
  clear_has_make_names_req();
  ::rpc::MakeNamesRequest* temp = make_names_req_;
  make_names_req_ = NULL;
  return temp;
}
inline void RpcRequest::set_allocated_make_names_req(::rpc::MakeNamesRequest* make_names_req) {
  delete make_names_req_;
  make_names_req_ = make_names_req;
  if (make_names_req) {
    set_has_make_names_req();
  } else {
    clear_has_make_names_req();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.RpcRequest.make_names_req)
}

// optional .rpc.MakeCommentsRequest make_comments_req = 3;
inline bool RpcRequest::has_make_comments_req() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RpcRequest::set_has_make_comments_req() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RpcRequest::clear_has_make_comments_req() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RpcRequest::clear_make_comments_req() {
  if (make_comments_req_ != NULL) make_comments_req_->::rpc::MakeCommentsRequest::Clear();
  clear_has_make_comments_req();
}
inline const ::rpc::MakeCommentsRequest& RpcRequest::make_comments_req() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.make_comments_req)
  return make_comments_req_ != NULL ? *make_comments_req_ : *default_instance_->make_comments_req_;
}
inline ::rpc::MakeCommentsRequest* RpcRequest::mutable_make_comments_req() {
  set_has_make_comments_req();
  if (make_comments_req_ == NULL) make_comments_req_ = new ::rpc::MakeCommentsRequest;
  // @@protoc_insertion_point(field_mutable:rpc.RpcRequest.make_comments_req)
  return make_comments_req_;
}
inline ::rpc::MakeCommentsRequest* RpcRequest::release_make_comments_req() {
  clear_has_make_comments_req();
  ::rpc::MakeCommentsRequest* temp = make_comments_req_;
  make_comments_req_ = NULL;
  return temp;
}
inline void RpcRequest::set_allocated_make_comments_req(::rpc::MakeCommentsRequest* make_comments_req) {
  delete make_comments_req_;
  make_comments_req_ = make_comments_req;
  if (make_comments_req) {
    set_has_make_comments_req();
  } else {
    clear_has_make_comments_req();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.RpcRequest.make_comments_req)
}

// optional .rpc.ReadMemoryRegionsRequest read_memory_regions_req = 4;
inline bool RpcRequest::has_read_memory_regions_req() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RpcRequest::set_has_read_memory_regions_req() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RpcRequest::clear_has_read_memory_regions_req() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RpcRequest::clear_read_memory_regions_req() {
  if (read_memory_regions_req_ != NULL) read_memory_regions_req_->::rpc::ReadMemoryRegionsRequest::Clear();
  clear_has_read_memory_regions_req();
}
inline const ::rpc::ReadMemoryRegionsRequest& RpcRequest::read_memory_regions_req() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.read_memory_regions_req)
  return read_memory_regions_req_ != NULL ? *read_memory_regions_req_ : *default_instance_->read_memory_regions_req_;
}
inline ::rpc::ReadMemoryRegionsRequest* RpcRequest::mutable_read_memory_regions_req() {
  set_has_read_memory_regions_req();
  if (read_memory_regions_req_ == NULL) read_memory_regions_req_ = new ::rpc::ReadMemoryRegionsRequest;
  // @@protoc_insertion_point(field_mutable:rpc.RpcRequest.read_memory_regions_req)
  return read_memory_regions_req_;
}
inline ::rpc::ReadMemoryRegionsRequest* RpcRequest::release_read_memory_regions_req() {
  clear_has_read_memory_regions_req();
  ::rpc::ReadMemoryRegionsRequest* temp = read_memory_regions_req_;
  read_memory_regions_req_ = NULL;
  return temp;
}
inline void RpcRequest::set_allocated_read_memory_regions_req(::rpc::ReadMemoryRegionsRequest* read_memory_regions_req) {
  delete read_memory_regions_req_;
  read_memory_regions_req_ = read_memory_regions_req;
  if (read_memory_regions_req) {
    set_has_read_memory_regions_req();
  } else {
    clear_has_read_memory_regions_req();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.RpcRequest.read_memory_regions_req)
}

// optional .rpc.AnalyzeExternalRefsRequest analyze_external_refs_req = 5;
inline bool RpcRequest::has_analyze_external_refs_req() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RpcRequest::set_has_analyze_external_refs_req() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RpcRequest::clear_has_analyze_external_refs_req() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RpcRequest::clear_analyze_external_refs_req() {
  if (analyze_external_refs_req_ != NULL) analyze_external_refs_req_->::rpc::AnalyzeExternalRefsRequest::Clear();
  clear_has_analyze_external_refs_req();
}
inline const ::rpc::AnalyzeExternalRefsRequest& RpcRequest::analyze_external_refs_req() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.analyze_external_refs_req)
  return analyze_external_refs_req_ != NULL ? *analyze_external_refs_req_ : *default_instance_->analyze_external_refs_req_;
}
inline ::rpc::AnalyzeExternalRefsRequest* RpcRequest::mutable_analyze_external_refs_req() {
  set_has_analyze_external_refs_req();
  if (analyze_external_refs_req_ == NULL) analyze_external_refs_req_ = new ::rpc::AnalyzeExternalRefsRequest;
  // @@protoc_insertion_point(field_mutable:rpc.RpcRequest.analyze_external_refs_req)
  return analyze_external_refs_req_;
}
inline ::rpc::AnalyzeExternalRefsRequest* RpcRequest::release_analyze_external_refs_req() {
  clear_has_analyze_external_refs_req();
  ::rpc::AnalyzeExternalRefsRequest* temp = analyze_external_refs_req_;
  analyze_external_refs_req_ = NULL;
  return temp;
}
inline void RpcRequest::set_allocated_analyze_external_refs_req(::rpc::AnalyzeExternalRefsRequest* analyze_external_refs_req) {
  delete analyze_external_refs_req_;
  analyze_external_refs_req_ = analyze_external_refs_req;
  if (analyze_external_refs_req) {
    set_has_analyze_external_refs_req();
  } else {
    clear_has_analyze_external_refs_req();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.RpcRequest.analyze_external_refs_req)
}

// optional .rpc.CheckPEHeadersRequest check_pe_headers_req = 6;
inline bool RpcRequest::has_check_pe_headers_req() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RpcRequest::set_has_check_pe_headers_req() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RpcRequest::clear_has_check_pe_headers_req() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RpcRequest::clear_check_pe_headers_req() {
  if (check_pe_headers_req_ != NULL) check_pe_headers_req_->::rpc::CheckPEHeadersRequest::Clear();
  clear_has_check_pe_headers_req();
}
inline const ::rpc::CheckPEHeadersRequest& RpcRequest::check_pe_headers_req() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.check_pe_headers_req)
  return check_pe_headers_req_ != NULL ? *check_pe_headers_req_ : *default_instance_->check_pe_headers_req_;
}
inline ::rpc::CheckPEHeadersRequest* RpcRequest::mutable_check_pe_headers_req() {
  set_has_check_pe_headers_req();
  if (check_pe_headers_req_ == NULL) check_pe_headers_req_ = new ::rpc::CheckPEHeadersRequest;
  // @@protoc_insertion_point(field_mutable:rpc.RpcRequest.check_pe_headers_req)
  return check_pe_headers_req_;
}
inline ::rpc::CheckPEHeadersRequest* RpcRequest::release_check_pe_headers_req() {
  clear_has_check_pe_headers_req();
  ::rpc::CheckPEHeadersRequest* temp = check_pe_headers_req_;
  check_pe_headers_req_ = NULL;
  return temp;
}
inline void RpcRequest::set_allocated_check_pe_headers_req(::rpc::CheckPEHeadersRequest* check_pe_headers_req) {
  delete check_pe_headers_req_;
  check_pe_headers_req_ = check_pe_headers_req;
  if (check_pe_headers_req) {
    set_has_check_pe_headers_req();
  } else {
    clear_has_check_pe_headers_req();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.RpcRequest.check_pe_headers_req)
}

// optional .rpc.AutoCompleteCodeRequest auto_complete_code_req = 7;
inline bool RpcRequest::has_auto_complete_code_req() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RpcRequest::set_has_auto_complete_code_req() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RpcRequest::clear_has_auto_complete_code_req() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RpcRequest::clear_auto_complete_code_req() {
  if (auto_complete_code_req_ != NULL) auto_complete_code_req_->::rpc::AutoCompleteCodeRequest::Clear();
  clear_has_auto_complete_code_req();
}
inline const ::rpc::AutoCompleteCodeRequest& RpcRequest::auto_complete_code_req() const {
  // @@protoc_insertion_point(field_get:rpc.RpcRequest.auto_complete_code_req)
  return auto_complete_code_req_ != NULL ? *auto_complete_code_req_ : *default_instance_->auto_complete_code_req_;
}
inline ::rpc::AutoCompleteCodeRequest* RpcRequest::mutable_auto_complete_code_req() {
  set_has_auto_complete_code_req();
  if (auto_complete_code_req_ == NULL) auto_complete_code_req_ = new ::rpc::AutoCompleteCodeRequest;
  // @@protoc_insertion_point(field_mutable:rpc.RpcRequest.auto_complete_code_req)
  return auto_complete_code_req_;
}
inline ::rpc::AutoCompleteCodeRequest* RpcRequest::release_auto_complete_code_req() {
  clear_has_auto_complete_code_req();
  ::rpc::AutoCompleteCodeRequest* temp = auto_complete_code_req_;
  auto_complete_code_req_ = NULL;
  return temp;
}
inline void RpcRequest::set_allocated_auto_complete_code_req(::rpc::AutoCompleteCodeRequest* auto_complete_code_req) {
  delete auto_complete_code_req_;
  auto_complete_code_req_ = auto_complete_code_req;
  if (auto_complete_code_req) {
    set_has_auto_complete_code_req();
  } else {
    clear_has_auto_complete_code_req();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.RpcRequest.auto_complete_code_req)
}

// -------------------------------------------------------------------

// Execute

// optional string script = 1;
inline bool Execute::has_script() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Execute::set_has_script() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Execute::clear_has_script() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Execute::clear_script() {
  if (script_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_->clear();
  }
  clear_has_script();
}
inline const ::std::string& Execute::script() const {
  // @@protoc_insertion_point(field_get:rpc.Execute.script)
  return *script_;
}
inline void Execute::set_script(const ::std::string& value) {
  set_has_script();
  if (script_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_ = new ::std::string;
  }
  script_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Execute.script)
}
inline void Execute::set_script(const char* value) {
  set_has_script();
  if (script_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_ = new ::std::string;
  }
  script_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Execute.script)
}
inline void Execute::set_script(const char* value, size_t size) {
  set_has_script();
  if (script_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_ = new ::std::string;
  }
  script_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Execute.script)
}
inline ::std::string* Execute::mutable_script() {
  set_has_script();
  if (script_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Execute.script)
  return script_;
}
inline ::std::string* Execute::release_script() {
  clear_has_script();
  if (script_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = script_;
    script_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Execute::set_allocated_script(::std::string* script) {
  if (script_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete script_;
  }
  if (script) {
    set_has_script();
    script_ = script;
  } else {
    clear_has_script();
    script_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Execute.script)
}

// optional string script_extern_obj = 2;
inline bool Execute::has_script_extern_obj() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Execute::set_has_script_extern_obj() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Execute::clear_has_script_extern_obj() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Execute::clear_script_extern_obj() {
  if (script_extern_obj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_extern_obj_->clear();
  }
  clear_has_script_extern_obj();
}
inline const ::std::string& Execute::script_extern_obj() const {
  // @@protoc_insertion_point(field_get:rpc.Execute.script_extern_obj)
  return *script_extern_obj_;
}
inline void Execute::set_script_extern_obj(const ::std::string& value) {
  set_has_script_extern_obj();
  if (script_extern_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_extern_obj_ = new ::std::string;
  }
  script_extern_obj_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Execute.script_extern_obj)
}
inline void Execute::set_script_extern_obj(const char* value) {
  set_has_script_extern_obj();
  if (script_extern_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_extern_obj_ = new ::std::string;
  }
  script_extern_obj_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Execute.script_extern_obj)
}
inline void Execute::set_script_extern_obj(const char* value, size_t size) {
  set_has_script_extern_obj();
  if (script_extern_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_extern_obj_ = new ::std::string;
  }
  script_extern_obj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Execute.script_extern_obj)
}
inline ::std::string* Execute::mutable_script_extern_obj() {
  set_has_script_extern_obj();
  if (script_extern_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_extern_obj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Execute.script_extern_obj)
  return script_extern_obj_;
}
inline ::std::string* Execute::release_script_extern_obj() {
  clear_has_script_extern_obj();
  if (script_extern_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = script_extern_obj_;
    script_extern_obj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Execute::set_allocated_script_extern_obj(::std::string* script_extern_obj) {
  if (script_extern_obj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete script_extern_obj_;
  }
  if (script_extern_obj) {
    set_has_script_extern_obj();
    script_extern_obj_ = script_extern_obj;
  } else {
    clear_has_script_extern_obj();
    script_extern_obj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Execute.script_extern_obj)
}

// optional bytes rpc_request = 3;
inline bool Execute::has_rpc_request() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Execute::set_has_rpc_request() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Execute::clear_has_rpc_request() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Execute::clear_rpc_request() {
  if (rpc_request_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_request_->clear();
  }
  clear_has_rpc_request();
}
inline const ::std::string& Execute::rpc_request() const {
  // @@protoc_insertion_point(field_get:rpc.Execute.rpc_request)
  return *rpc_request_;
}
inline void Execute::set_rpc_request(const ::std::string& value) {
  set_has_rpc_request();
  if (rpc_request_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_request_ = new ::std::string;
  }
  rpc_request_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Execute.rpc_request)
}
inline void Execute::set_rpc_request(const char* value) {
  set_has_rpc_request();
  if (rpc_request_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_request_ = new ::std::string;
  }
  rpc_request_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Execute.rpc_request)
}
inline void Execute::set_rpc_request(const void* value, size_t size) {
  set_has_rpc_request();
  if (rpc_request_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_request_ = new ::std::string;
  }
  rpc_request_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Execute.rpc_request)
}
inline ::std::string* Execute::mutable_rpc_request() {
  set_has_rpc_request();
  if (rpc_request_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_request_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Execute.rpc_request)
  return rpc_request_;
}
inline ::std::string* Execute::release_rpc_request() {
  clear_has_rpc_request();
  if (rpc_request_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rpc_request_;
    rpc_request_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Execute::set_allocated_rpc_request(::std::string* rpc_request) {
  if (rpc_request_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rpc_request_;
  }
  if (rpc_request) {
    set_has_rpc_request();
    rpc_request_ = rpc_request;
  } else {
    clear_has_rpc_request();
    rpc_request_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Execute.rpc_request)
}

// optional bool background = 4 [default = false];
inline bool Execute::has_background() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Execute::set_has_background() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Execute::clear_has_background() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Execute::clear_background() {
  background_ = false;
  clear_has_background();
}
inline bool Execute::background() const {
  // @@protoc_insertion_point(field_get:rpc.Execute.background)
  return background_;
}
inline void Execute::set_background(bool value) {
  set_has_background();
  background_ = value;
  // @@protoc_insertion_point(field_set:rpc.Execute.background)
}

// optional uint64 job_id = 5;
inline bool Execute::has_job_id() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Execute::set_has_job_id() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Execute::clear_has_job_id() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Execute::clear_job_id() {
  job_id_ = GOOGLE_ULONGLONG(0);
  clear_has_job_id();
}
inline ::google::protobuf::uint64 Execute::job_id() const {
  // @@protoc_insertion_point(field_get:rpc.Execute.job_id)
  return job_id_;
}
inline void Execute::set_job_id(::google::protobuf::uint64 value) {
  set_has_job_id();
  job_id_ = value;
  // @@protoc_insertion_point(field_set:rpc.Execute.job_id)
}

// -------------------------------------------------------------------

// Response

// required uint64 job_id = 1;
inline bool Response::has_job_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Response::set_has_job_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Response::clear_has_job_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Response::clear_job_id() {
  job_id_ = GOOGLE_ULONGLONG(0);
  clear_has_job_id();
}
inline ::google::protobuf::uint64 Response::job_id() const {
  // @@protoc_insertion_point(field_get:rpc.Response.job_id)
  return job_id_;
}
inline void Response::set_job_id(::google::protobuf::uint64 value) {
  set_has_job_id();
  job_id_ = value;
  // @@protoc_insertion_point(field_set:rpc.Response.job_id)
}

// optional string std_out = 2;
inline bool Response::has_std_out() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Response::set_has_std_out() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Response::clear_has_std_out() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Response::clear_std_out() {
  if (std_out_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_out_->clear();
  }
  clear_has_std_out();
}
inline const ::std::string& Response::std_out() const {
  // @@protoc_insertion_point(field_get:rpc.Response.std_out)
  return *std_out_;
}
inline void Response::set_std_out(const ::std::string& value) {
  set_has_std_out();
  if (std_out_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_out_ = new ::std::string;
  }
  std_out_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Response.std_out)
}
inline void Response::set_std_out(const char* value) {
  set_has_std_out();
  if (std_out_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_out_ = new ::std::string;
  }
  std_out_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Response.std_out)
}
inline void Response::set_std_out(const char* value, size_t size) {
  set_has_std_out();
  if (std_out_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_out_ = new ::std::string;
  }
  std_out_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Response.std_out)
}
inline ::std::string* Response::mutable_std_out() {
  set_has_std_out();
  if (std_out_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_out_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Response.std_out)
  return std_out_;
}
inline ::std::string* Response::release_std_out() {
  clear_has_std_out();
  if (std_out_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = std_out_;
    std_out_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_std_out(::std::string* std_out) {
  if (std_out_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete std_out_;
  }
  if (std_out) {
    set_has_std_out();
    std_out_ = std_out;
  } else {
    clear_has_std_out();
    std_out_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Response.std_out)
}

// optional string std_err = 3;
inline bool Response::has_std_err() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Response::set_has_std_err() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Response::clear_has_std_err() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Response::clear_std_err() {
  if (std_err_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_err_->clear();
  }
  clear_has_std_err();
}
inline const ::std::string& Response::std_err() const {
  // @@protoc_insertion_point(field_get:rpc.Response.std_err)
  return *std_err_;
}
inline void Response::set_std_err(const ::std::string& value) {
  set_has_std_err();
  if (std_err_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_err_ = new ::std::string;
  }
  std_err_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Response.std_err)
}
inline void Response::set_std_err(const char* value) {
  set_has_std_err();
  if (std_err_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_err_ = new ::std::string;
  }
  std_err_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Response.std_err)
}
inline void Response::set_std_err(const char* value, size_t size) {
  set_has_std_err();
  if (std_err_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_err_ = new ::std::string;
  }
  std_err_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Response.std_err)
}
inline ::std::string* Response::mutable_std_err() {
  set_has_std_err();
  if (std_err_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    std_err_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Response.std_err)
  return std_err_;
}
inline ::std::string* Response::release_std_err() {
  clear_has_std_err();
  if (std_err_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = std_err_;
    std_err_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_std_err(::std::string* std_err) {
  if (std_err_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete std_err_;
  }
  if (std_err) {
    set_has_std_err();
    std_err_ = std_err;
  } else {
    clear_has_std_err();
    std_err_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Response.std_err)
}

// optional string error = 4;
inline bool Response::has_error() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Response::set_has_error() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Response::clear_has_error() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Response::clear_error() {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_->clear();
  }
  clear_has_error();
}
inline const ::std::string& Response::error() const {
  // @@protoc_insertion_point(field_get:rpc.Response.error)
  return *error_;
}
inline void Response::set_error(const ::std::string& value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Response.error)
}
inline void Response::set_error(const char* value) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Response.error)
}
inline void Response::set_error(const char* value, size_t size) {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  error_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Response.error)
}
inline ::std::string* Response::mutable_error() {
  set_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    error_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Response.error)
  return error_;
}
inline ::std::string* Response::release_error() {
  clear_has_error();
  if (error_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = error_;
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_error(::std::string* error) {
  if (error_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete error_;
  }
  if (error) {
    set_has_error();
    error_ = error;
  } else {
    clear_has_error();
    error_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Response.error)
}

// optional bytes rpc_result = 5;
inline bool Response::has_rpc_result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Response::set_has_rpc_result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Response::clear_has_rpc_result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Response::clear_rpc_result() {
  if (rpc_result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_result_->clear();
  }
  clear_has_rpc_result();
}
inline const ::std::string& Response::rpc_result() const {
  // @@protoc_insertion_point(field_get:rpc.Response.rpc_result)
  return *rpc_result_;
}
inline void Response::set_rpc_result(const ::std::string& value) {
  set_has_rpc_result();
  if (rpc_result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_result_ = new ::std::string;
  }
  rpc_result_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Response.rpc_result)
}
inline void Response::set_rpc_result(const char* value) {
  set_has_rpc_result();
  if (rpc_result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_result_ = new ::std::string;
  }
  rpc_result_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Response.rpc_result)
}
inline void Response::set_rpc_result(const void* value, size_t size) {
  set_has_rpc_result();
  if (rpc_result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_result_ = new ::std::string;
  }
  rpc_result_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Response.rpc_result)
}
inline ::std::string* Response::mutable_rpc_result() {
  set_has_rpc_result();
  if (rpc_result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    rpc_result_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Response.rpc_result)
  return rpc_result_;
}
inline ::std::string* Response::release_rpc_result() {
  clear_has_rpc_result();
  if (rpc_result_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = rpc_result_;
    rpc_result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_rpc_result(::std::string* rpc_result) {
  if (rpc_result_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete rpc_result_;
  }
  if (rpc_result) {
    set_has_rpc_result();
    rpc_result_ = rpc_result;
  } else {
    clear_has_rpc_result();
    rpc_result_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Response.rpc_result)
}

// optional .rpc.Response.JobStatus job_status = 6;
inline bool Response::has_job_status() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void Response::set_has_job_status() {
  _has_bits_[0] |= 0x00000020u;
}
inline void Response::clear_has_job_status() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void Response::clear_job_status() {
  job_status_ = 1;
  clear_has_job_status();
}
inline ::rpc::Response_JobStatus Response::job_status() const {
  // @@protoc_insertion_point(field_get:rpc.Response.job_status)
  return static_cast< ::rpc::Response_JobStatus >(job_status_);
}
inline void Response::set_job_status(::rpc::Response_JobStatus value) {
  assert(::rpc::Response_JobStatus_IsValid(value));
  set_has_job_status();
  job_status_ = value;
  // @@protoc_insertion_point(field_set:rpc.Response.job_status)
}

// optional string script_result_obj = 7;
inline bool Response::has_script_result_obj() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void Response::set_has_script_result_obj() {
  _has_bits_[0] |= 0x00000040u;
}
inline void Response::clear_has_script_result_obj() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void Response::clear_script_result_obj() {
  if (script_result_obj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_result_obj_->clear();
  }
  clear_has_script_result_obj();
}
inline const ::std::string& Response::script_result_obj() const {
  // @@protoc_insertion_point(field_get:rpc.Response.script_result_obj)
  return *script_result_obj_;
}
inline void Response::set_script_result_obj(const ::std::string& value) {
  set_has_script_result_obj();
  if (script_result_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_result_obj_ = new ::std::string;
  }
  script_result_obj_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.Response.script_result_obj)
}
inline void Response::set_script_result_obj(const char* value) {
  set_has_script_result_obj();
  if (script_result_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_result_obj_ = new ::std::string;
  }
  script_result_obj_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.Response.script_result_obj)
}
inline void Response::set_script_result_obj(const char* value, size_t size) {
  set_has_script_result_obj();
  if (script_result_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_result_obj_ = new ::std::string;
  }
  script_result_obj_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.Response.script_result_obj)
}
inline ::std::string* Response::mutable_script_result_obj() {
  set_has_script_result_obj();
  if (script_result_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    script_result_obj_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.Response.script_result_obj)
  return script_result_obj_;
}
inline ::std::string* Response::release_script_result_obj() {
  clear_has_script_result_obj();
  if (script_result_obj_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = script_result_obj_;
    script_result_obj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Response::set_allocated_script_result_obj(::std::string* script_result_obj) {
  if (script_result_obj_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete script_result_obj_;
  }
  if (script_result_obj) {
    set_has_script_result_obj();
    script_result_obj_ = script_result_obj;
  } else {
    clear_has_script_result_obj();
    script_result_obj_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.Response.script_result_obj)
}

// -------------------------------------------------------------------

// MakeNamesRequest_Name

// required uint64 ea = 1;
inline bool MakeNamesRequest_Name::has_ea() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeNamesRequest_Name::set_has_ea() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MakeNamesRequest_Name::clear_has_ea() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MakeNamesRequest_Name::clear_ea() {
  ea_ = GOOGLE_ULONGLONG(0);
  clear_has_ea();
}
inline ::google::protobuf::uint64 MakeNamesRequest_Name::ea() const {
  // @@protoc_insertion_point(field_get:rpc.MakeNamesRequest.Name.ea)
  return ea_;
}
inline void MakeNamesRequest_Name::set_ea(::google::protobuf::uint64 value) {
  set_has_ea();
  ea_ = value;
  // @@protoc_insertion_point(field_set:rpc.MakeNamesRequest.Name.ea)
}

// required string name = 2;
inline bool MakeNamesRequest_Name::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeNamesRequest_Name::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MakeNamesRequest_Name::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MakeNamesRequest_Name::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MakeNamesRequest_Name::name() const {
  // @@protoc_insertion_point(field_get:rpc.MakeNamesRequest.Name.name)
  return *name_;
}
inline void MakeNamesRequest_Name::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.MakeNamesRequest.Name.name)
}
inline void MakeNamesRequest_Name::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.MakeNamesRequest.Name.name)
}
inline void MakeNamesRequest_Name::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.MakeNamesRequest.Name.name)
}
inline ::std::string* MakeNamesRequest_Name::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.MakeNamesRequest.Name.name)
  return name_;
}
inline ::std::string* MakeNamesRequest_Name::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MakeNamesRequest_Name::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.MakeNamesRequest.Name.name)
}

// -------------------------------------------------------------------

// MakeNamesRequest

// repeated .rpc.MakeNamesRequest.Name names = 1;
inline int MakeNamesRequest::names_size() const {
  return names_.size();
}
inline void MakeNamesRequest::clear_names() {
  names_.Clear();
}
inline const ::rpc::MakeNamesRequest_Name& MakeNamesRequest::names(int index) const {
  // @@protoc_insertion_point(field_get:rpc.MakeNamesRequest.names)
  return names_.Get(index);
}
inline ::rpc::MakeNamesRequest_Name* MakeNamesRequest::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.MakeNamesRequest.names)
  return names_.Mutable(index);
}
inline ::rpc::MakeNamesRequest_Name* MakeNamesRequest::add_names() {
  // @@protoc_insertion_point(field_add:rpc.MakeNamesRequest.names)
  return names_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::MakeNamesRequest_Name >&
MakeNamesRequest::names() const {
  // @@protoc_insertion_point(field_list:rpc.MakeNamesRequest.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::MakeNamesRequest_Name >*
MakeNamesRequest::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:rpc.MakeNamesRequest.names)
  return &names_;
}

// required uint64 base = 2;
inline bool MakeNamesRequest::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeNamesRequest::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MakeNamesRequest::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MakeNamesRequest::clear_base() {
  base_ = GOOGLE_ULONGLONG(0);
  clear_has_base();
}
inline ::google::protobuf::uint64 MakeNamesRequest::base() const {
  // @@protoc_insertion_point(field_get:rpc.MakeNamesRequest.base)
  return base_;
}
inline void MakeNamesRequest::set_base(::google::protobuf::uint64 value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:rpc.MakeNamesRequest.base)
}

// required uint64 remote_base = 3;
inline bool MakeNamesRequest::has_remote_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MakeNamesRequest::set_has_remote_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MakeNamesRequest::clear_has_remote_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MakeNamesRequest::clear_remote_base() {
  remote_base_ = GOOGLE_ULONGLONG(0);
  clear_has_remote_base();
}
inline ::google::protobuf::uint64 MakeNamesRequest::remote_base() const {
  // @@protoc_insertion_point(field_get:rpc.MakeNamesRequest.remote_base)
  return remote_base_;
}
inline void MakeNamesRequest::set_remote_base(::google::protobuf::uint64 value) {
  set_has_remote_base();
  remote_base_ = value;
  // @@protoc_insertion_point(field_set:rpc.MakeNamesRequest.remote_base)
}

// -------------------------------------------------------------------

// MakeCommentsRequest_Name

// required uint64 ea = 1;
inline bool MakeCommentsRequest_Name::has_ea() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MakeCommentsRequest_Name::set_has_ea() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MakeCommentsRequest_Name::clear_has_ea() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MakeCommentsRequest_Name::clear_ea() {
  ea_ = GOOGLE_ULONGLONG(0);
  clear_has_ea();
}
inline ::google::protobuf::uint64 MakeCommentsRequest_Name::ea() const {
  // @@protoc_insertion_point(field_get:rpc.MakeCommentsRequest.Name.ea)
  return ea_;
}
inline void MakeCommentsRequest_Name::set_ea(::google::protobuf::uint64 value) {
  set_has_ea();
  ea_ = value;
  // @@protoc_insertion_point(field_set:rpc.MakeCommentsRequest.Name.ea)
}

// required string name = 2;
inline bool MakeCommentsRequest_Name::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeCommentsRequest_Name::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MakeCommentsRequest_Name::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MakeCommentsRequest_Name::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& MakeCommentsRequest_Name::name() const {
  // @@protoc_insertion_point(field_get:rpc.MakeCommentsRequest.Name.name)
  return *name_;
}
inline void MakeCommentsRequest_Name::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.MakeCommentsRequest.Name.name)
}
inline void MakeCommentsRequest_Name::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.MakeCommentsRequest.Name.name)
}
inline void MakeCommentsRequest_Name::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.MakeCommentsRequest.Name.name)
}
inline ::std::string* MakeCommentsRequest_Name::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.MakeCommentsRequest.Name.name)
  return name_;
}
inline ::std::string* MakeCommentsRequest_Name::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MakeCommentsRequest_Name::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.MakeCommentsRequest.Name.name)
}

// -------------------------------------------------------------------

// MakeCommentsRequest

// repeated .rpc.MakeCommentsRequest.Name names = 1;
inline int MakeCommentsRequest::names_size() const {
  return names_.size();
}
inline void MakeCommentsRequest::clear_names() {
  names_.Clear();
}
inline const ::rpc::MakeCommentsRequest_Name& MakeCommentsRequest::names(int index) const {
  // @@protoc_insertion_point(field_get:rpc.MakeCommentsRequest.names)
  return names_.Get(index);
}
inline ::rpc::MakeCommentsRequest_Name* MakeCommentsRequest::mutable_names(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.MakeCommentsRequest.names)
  return names_.Mutable(index);
}
inline ::rpc::MakeCommentsRequest_Name* MakeCommentsRequest::add_names() {
  // @@protoc_insertion_point(field_add:rpc.MakeCommentsRequest.names)
  return names_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::MakeCommentsRequest_Name >&
MakeCommentsRequest::names() const {
  // @@protoc_insertion_point(field_list:rpc.MakeCommentsRequest.names)
  return names_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::MakeCommentsRequest_Name >*
MakeCommentsRequest::mutable_names() {
  // @@protoc_insertion_point(field_mutable_list:rpc.MakeCommentsRequest.names)
  return &names_;
}

// required uint64 base = 2;
inline bool MakeCommentsRequest::has_base() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MakeCommentsRequest::set_has_base() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MakeCommentsRequest::clear_has_base() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MakeCommentsRequest::clear_base() {
  base_ = GOOGLE_ULONGLONG(0);
  clear_has_base();
}
inline ::google::protobuf::uint64 MakeCommentsRequest::base() const {
  // @@protoc_insertion_point(field_get:rpc.MakeCommentsRequest.base)
  return base_;
}
inline void MakeCommentsRequest::set_base(::google::protobuf::uint64 value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:rpc.MakeCommentsRequest.base)
}

// required uint64 remote_base = 3;
inline bool MakeCommentsRequest::has_remote_base() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MakeCommentsRequest::set_has_remote_base() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MakeCommentsRequest::clear_has_remote_base() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MakeCommentsRequest::clear_remote_base() {
  remote_base_ = GOOGLE_ULONGLONG(0);
  clear_has_remote_base();
}
inline ::google::protobuf::uint64 MakeCommentsRequest::remote_base() const {
  // @@protoc_insertion_point(field_get:rpc.MakeCommentsRequest.remote_base)
  return remote_base_;
}
inline void MakeCommentsRequest::set_remote_base(::google::protobuf::uint64 value) {
  set_has_remote_base();
  remote_base_ = value;
  // @@protoc_insertion_point(field_set:rpc.MakeCommentsRequest.remote_base)
}

// -------------------------------------------------------------------

// GetMemoryMapResult_Memory

// required uint64 base = 1;
inline bool GetMemoryMapResult_Memory::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMemoryMapResult_Memory::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMemoryMapResult_Memory::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMemoryMapResult_Memory::clear_base() {
  base_ = GOOGLE_ULONGLONG(0);
  clear_has_base();
}
inline ::google::protobuf::uint64 GetMemoryMapResult_Memory::base() const {
  // @@protoc_insertion_point(field_get:rpc.GetMemoryMapResult.Memory.base)
  return base_;
}
inline void GetMemoryMapResult_Memory::set_base(::google::protobuf::uint64 value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:rpc.GetMemoryMapResult.Memory.base)
}

// required uint64 size = 2;
inline bool GetMemoryMapResult_Memory::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMemoryMapResult_Memory::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMemoryMapResult_Memory::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMemoryMapResult_Memory::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 GetMemoryMapResult_Memory::size() const {
  // @@protoc_insertion_point(field_get:rpc.GetMemoryMapResult.Memory.size)
  return size_;
}
inline void GetMemoryMapResult_Memory::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:rpc.GetMemoryMapResult.Memory.size)
}

// required uint32 access = 3;
inline bool GetMemoryMapResult_Memory::has_access() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMemoryMapResult_Memory::set_has_access() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMemoryMapResult_Memory::clear_has_access() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMemoryMapResult_Memory::clear_access() {
  access_ = 0u;
  clear_has_access();
}
inline ::google::protobuf::uint32 GetMemoryMapResult_Memory::access() const {
  // @@protoc_insertion_point(field_get:rpc.GetMemoryMapResult.Memory.access)
  return access_;
}
inline void GetMemoryMapResult_Memory::set_access(::google::protobuf::uint32 value) {
  set_has_access();
  access_ = value;
  // @@protoc_insertion_point(field_set:rpc.GetMemoryMapResult.Memory.access)
}

// required string name = 4;
inline bool GetMemoryMapResult_Memory::has_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetMemoryMapResult_Memory::set_has_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetMemoryMapResult_Memory::clear_has_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetMemoryMapResult_Memory::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& GetMemoryMapResult_Memory::name() const {
  // @@protoc_insertion_point(field_get:rpc.GetMemoryMapResult.Memory.name)
  return *name_;
}
inline void GetMemoryMapResult_Memory::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.GetMemoryMapResult.Memory.name)
}
inline void GetMemoryMapResult_Memory::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.GetMemoryMapResult.Memory.name)
}
inline void GetMemoryMapResult_Memory::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.GetMemoryMapResult.Memory.name)
}
inline ::std::string* GetMemoryMapResult_Memory::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.GetMemoryMapResult.Memory.name)
  return name_;
}
inline ::std::string* GetMemoryMapResult_Memory::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetMemoryMapResult_Memory::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.GetMemoryMapResult.Memory.name)
}

// -------------------------------------------------------------------

// GetMemoryMapResult

// repeated .rpc.GetMemoryMapResult.Memory memories = 1;
inline int GetMemoryMapResult::memories_size() const {
  return memories_.size();
}
inline void GetMemoryMapResult::clear_memories() {
  memories_.Clear();
}
inline const ::rpc::GetMemoryMapResult_Memory& GetMemoryMapResult::memories(int index) const {
  // @@protoc_insertion_point(field_get:rpc.GetMemoryMapResult.memories)
  return memories_.Get(index);
}
inline ::rpc::GetMemoryMapResult_Memory* GetMemoryMapResult::mutable_memories(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.GetMemoryMapResult.memories)
  return memories_.Mutable(index);
}
inline ::rpc::GetMemoryMapResult_Memory* GetMemoryMapResult::add_memories() {
  // @@protoc_insertion_point(field_add:rpc.GetMemoryMapResult.memories)
  return memories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::GetMemoryMapResult_Memory >&
GetMemoryMapResult::memories() const {
  // @@protoc_insertion_point(field_list:rpc.GetMemoryMapResult.memories)
  return memories_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::GetMemoryMapResult_Memory >*
GetMemoryMapResult::mutable_memories() {
  // @@protoc_insertion_point(field_mutable_list:rpc.GetMemoryMapResult.memories)
  return &memories_;
}

// -------------------------------------------------------------------

// ReadMemoryRegionsRequest_Region

// required uint64 addr = 1;
inline bool ReadMemoryRegionsRequest_Region::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadMemoryRegionsRequest_Region::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadMemoryRegionsRequest_Region::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadMemoryRegionsRequest_Region::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
inline ::google::protobuf::uint64 ReadMemoryRegionsRequest_Region::addr() const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsRequest.Region.addr)
  return addr_;
}
inline void ReadMemoryRegionsRequest_Region::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:rpc.ReadMemoryRegionsRequest.Region.addr)
}

// required uint64 size = 2;
inline bool ReadMemoryRegionsRequest_Region::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadMemoryRegionsRequest_Region::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadMemoryRegionsRequest_Region::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadMemoryRegionsRequest_Region::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 ReadMemoryRegionsRequest_Region::size() const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsRequest.Region.size)
  return size_;
}
inline void ReadMemoryRegionsRequest_Region::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:rpc.ReadMemoryRegionsRequest.Region.size)
}

// -------------------------------------------------------------------

// ReadMemoryRegionsRequest

// repeated .rpc.ReadMemoryRegionsRequest.Region regions = 1;
inline int ReadMemoryRegionsRequest::regions_size() const {
  return regions_.size();
}
inline void ReadMemoryRegionsRequest::clear_regions() {
  regions_.Clear();
}
inline const ::rpc::ReadMemoryRegionsRequest_Region& ReadMemoryRegionsRequest::regions(int index) const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsRequest.regions)
  return regions_.Get(index);
}
inline ::rpc::ReadMemoryRegionsRequest_Region* ReadMemoryRegionsRequest::mutable_regions(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.ReadMemoryRegionsRequest.regions)
  return regions_.Mutable(index);
}
inline ::rpc::ReadMemoryRegionsRequest_Region* ReadMemoryRegionsRequest::add_regions() {
  // @@protoc_insertion_point(field_add:rpc.ReadMemoryRegionsRequest.regions)
  return regions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsRequest_Region >&
ReadMemoryRegionsRequest::regions() const {
  // @@protoc_insertion_point(field_list:rpc.ReadMemoryRegionsRequest.regions)
  return regions_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsRequest_Region >*
ReadMemoryRegionsRequest::mutable_regions() {
  // @@protoc_insertion_point(field_mutable_list:rpc.ReadMemoryRegionsRequest.regions)
  return &regions_;
}

// -------------------------------------------------------------------

// ReadMemoryRegionsResult_Memory

// required uint64 addr = 1;
inline bool ReadMemoryRegionsResult_Memory::has_addr() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReadMemoryRegionsResult_Memory::set_has_addr() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReadMemoryRegionsResult_Memory::clear_has_addr() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReadMemoryRegionsResult_Memory::clear_addr() {
  addr_ = GOOGLE_ULONGLONG(0);
  clear_has_addr();
}
inline ::google::protobuf::uint64 ReadMemoryRegionsResult_Memory::addr() const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsResult.Memory.addr)
  return addr_;
}
inline void ReadMemoryRegionsResult_Memory::set_addr(::google::protobuf::uint64 value) {
  set_has_addr();
  addr_ = value;
  // @@protoc_insertion_point(field_set:rpc.ReadMemoryRegionsResult.Memory.addr)
}

// required uint64 size = 2;
inline bool ReadMemoryRegionsResult_Memory::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReadMemoryRegionsResult_Memory::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReadMemoryRegionsResult_Memory::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReadMemoryRegionsResult_Memory::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 ReadMemoryRegionsResult_Memory::size() const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsResult.Memory.size)
  return size_;
}
inline void ReadMemoryRegionsResult_Memory::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:rpc.ReadMemoryRegionsResult.Memory.size)
}

// required bytes mem = 3;
inline bool ReadMemoryRegionsResult_Memory::has_mem() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReadMemoryRegionsResult_Memory::set_has_mem() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReadMemoryRegionsResult_Memory::clear_has_mem() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReadMemoryRegionsResult_Memory::clear_mem() {
  if (mem_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mem_->clear();
  }
  clear_has_mem();
}
inline const ::std::string& ReadMemoryRegionsResult_Memory::mem() const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsResult.Memory.mem)
  return *mem_;
}
inline void ReadMemoryRegionsResult_Memory::set_mem(const ::std::string& value) {
  set_has_mem();
  if (mem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mem_ = new ::std::string;
  }
  mem_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.ReadMemoryRegionsResult.Memory.mem)
}
inline void ReadMemoryRegionsResult_Memory::set_mem(const char* value) {
  set_has_mem();
  if (mem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mem_ = new ::std::string;
  }
  mem_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.ReadMemoryRegionsResult.Memory.mem)
}
inline void ReadMemoryRegionsResult_Memory::set_mem(const void* value, size_t size) {
  set_has_mem();
  if (mem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mem_ = new ::std::string;
  }
  mem_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.ReadMemoryRegionsResult.Memory.mem)
}
inline ::std::string* ReadMemoryRegionsResult_Memory::mutable_mem() {
  set_has_mem();
  if (mem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    mem_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.ReadMemoryRegionsResult.Memory.mem)
  return mem_;
}
inline ::std::string* ReadMemoryRegionsResult_Memory::release_mem() {
  clear_has_mem();
  if (mem_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = mem_;
    mem_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReadMemoryRegionsResult_Memory::set_allocated_mem(::std::string* mem) {
  if (mem_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete mem_;
  }
  if (mem) {
    set_has_mem();
    mem_ = mem;
  } else {
    clear_has_mem();
    mem_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.ReadMemoryRegionsResult.Memory.mem)
}

// required uint32 protect = 4;
inline bool ReadMemoryRegionsResult_Memory::has_protect() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReadMemoryRegionsResult_Memory::set_has_protect() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReadMemoryRegionsResult_Memory::clear_has_protect() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReadMemoryRegionsResult_Memory::clear_protect() {
  protect_ = 0u;
  clear_has_protect();
}
inline ::google::protobuf::uint32 ReadMemoryRegionsResult_Memory::protect() const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsResult.Memory.protect)
  return protect_;
}
inline void ReadMemoryRegionsResult_Memory::set_protect(::google::protobuf::uint32 value) {
  set_has_protect();
  protect_ = value;
  // @@protoc_insertion_point(field_set:rpc.ReadMemoryRegionsResult.Memory.protect)
}

// -------------------------------------------------------------------

// ReadMemoryRegionsResult

// repeated .rpc.ReadMemoryRegionsResult.Memory memories = 1;
inline int ReadMemoryRegionsResult::memories_size() const {
  return memories_.size();
}
inline void ReadMemoryRegionsResult::clear_memories() {
  memories_.Clear();
}
inline const ::rpc::ReadMemoryRegionsResult_Memory& ReadMemoryRegionsResult::memories(int index) const {
  // @@protoc_insertion_point(field_get:rpc.ReadMemoryRegionsResult.memories)
  return memories_.Get(index);
}
inline ::rpc::ReadMemoryRegionsResult_Memory* ReadMemoryRegionsResult::mutable_memories(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.ReadMemoryRegionsResult.memories)
  return memories_.Mutable(index);
}
inline ::rpc::ReadMemoryRegionsResult_Memory* ReadMemoryRegionsResult::add_memories() {
  // @@protoc_insertion_point(field_add:rpc.ReadMemoryRegionsResult.memories)
  return memories_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsResult_Memory >&
ReadMemoryRegionsResult::memories() const {
  // @@protoc_insertion_point(field_list:rpc.ReadMemoryRegionsResult.memories)
  return memories_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::ReadMemoryRegionsResult_Memory >*
ReadMemoryRegionsResult::mutable_memories() {
  // @@protoc_insertion_point(field_mutable_list:rpc.ReadMemoryRegionsResult.memories)
  return &memories_;
}

// -------------------------------------------------------------------

// AnalyzeExternalRefsRequest

// required uint64 ea_from = 1;
inline bool AnalyzeExternalRefsRequest::has_ea_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnalyzeExternalRefsRequest::set_has_ea_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnalyzeExternalRefsRequest::clear_has_ea_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnalyzeExternalRefsRequest::clear_ea_from() {
  ea_from_ = GOOGLE_ULONGLONG(0);
  clear_has_ea_from();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsRequest::ea_from() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsRequest.ea_from)
  return ea_from_;
}
inline void AnalyzeExternalRefsRequest::set_ea_from(::google::protobuf::uint64 value) {
  set_has_ea_from();
  ea_from_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsRequest.ea_from)
}

// required uint64 ea_to = 2;
inline bool AnalyzeExternalRefsRequest::has_ea_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnalyzeExternalRefsRequest::set_has_ea_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnalyzeExternalRefsRequest::clear_has_ea_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnalyzeExternalRefsRequest::clear_ea_to() {
  ea_to_ = GOOGLE_ULONGLONG(0);
  clear_has_ea_to();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsRequest::ea_to() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsRequest.ea_to)
  return ea_to_;
}
inline void AnalyzeExternalRefsRequest::set_ea_to(::google::protobuf::uint64 value) {
  set_has_ea_to();
  ea_to_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsRequest.ea_to)
}

// required uint32 increment = 3;
inline bool AnalyzeExternalRefsRequest::has_increment() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnalyzeExternalRefsRequest::set_has_increment() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnalyzeExternalRefsRequest::clear_has_increment() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnalyzeExternalRefsRequest::clear_increment() {
  increment_ = 0u;
  clear_has_increment();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsRequest::increment() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsRequest.increment)
  return increment_;
}
inline void AnalyzeExternalRefsRequest::set_increment(::google::protobuf::uint32 value) {
  set_has_increment();
  increment_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsRequest.increment)
}

// required uint64 analysing_base = 4;
inline bool AnalyzeExternalRefsRequest::has_analysing_base() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnalyzeExternalRefsRequest::set_has_analysing_base() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnalyzeExternalRefsRequest::clear_has_analysing_base() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnalyzeExternalRefsRequest::clear_analysing_base() {
  analysing_base_ = GOOGLE_ULONGLONG(0);
  clear_has_analysing_base();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsRequest::analysing_base() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsRequest.analysing_base)
  return analysing_base_;
}
inline void AnalyzeExternalRefsRequest::set_analysing_base(::google::protobuf::uint64 value) {
  set_has_analysing_base();
  analysing_base_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsRequest.analysing_base)
}

// required uint64 analysing_size = 5;
inline bool AnalyzeExternalRefsRequest::has_analysing_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AnalyzeExternalRefsRequest::set_has_analysing_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AnalyzeExternalRefsRequest::clear_has_analysing_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AnalyzeExternalRefsRequest::clear_analysing_size() {
  analysing_size_ = GOOGLE_ULONGLONG(0);
  clear_has_analysing_size();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsRequest::analysing_size() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsRequest.analysing_size)
  return analysing_size_;
}
inline void AnalyzeExternalRefsRequest::set_analysing_size(::google::protobuf::uint64 value) {
  set_has_analysing_size();
  analysing_size_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsRequest.analysing_size)
}

// -------------------------------------------------------------------

// AnalyzeExternalRefsResult_PointerData

// required uint64 ea = 1;
inline bool AnalyzeExternalRefsResult_PointerData::has_ea() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnalyzeExternalRefsResult_PointerData::set_has_ea() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_has_ea() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_ea() {
  ea_ = GOOGLE_ULONGLONG(0);
  clear_has_ea();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_PointerData::ea() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.PointerData.ea)
  return ea_;
}
inline void AnalyzeExternalRefsResult_PointerData::set_ea(::google::protobuf::uint64 value) {
  set_has_ea();
  ea_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.PointerData.ea)
}

// required string module = 2;
inline bool AnalyzeExternalRefsResult_PointerData::has_module() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnalyzeExternalRefsResult_PointerData::set_has_module() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_has_module() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_module() {
  if (module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_->clear();
  }
  clear_has_module();
}
inline const ::std::string& AnalyzeExternalRefsResult_PointerData::module() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.PointerData.module)
  return *module_;
}
inline void AnalyzeExternalRefsResult_PointerData::set_module(const ::std::string& value) {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  module_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.PointerData.module)
}
inline void AnalyzeExternalRefsResult_PointerData::set_module(const char* value) {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  module_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.PointerData.module)
}
inline void AnalyzeExternalRefsResult_PointerData::set_module(const char* value, size_t size) {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  module_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.PointerData.module)
}
inline ::std::string* AnalyzeExternalRefsResult_PointerData::mutable_module() {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.PointerData.module)
  return module_;
}
inline ::std::string* AnalyzeExternalRefsResult_PointerData::release_module() {
  clear_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = module_;
    module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_PointerData::set_allocated_module(::std::string* module) {
  if (module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete module_;
  }
  if (module) {
    set_has_module();
    module_ = module;
  } else {
    clear_has_module();
    module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.PointerData.module)
}

// required string proc = 3;
inline bool AnalyzeExternalRefsResult_PointerData::has_proc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnalyzeExternalRefsResult_PointerData::set_has_proc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_has_proc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_proc() {
  if (proc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_->clear();
  }
  clear_has_proc();
}
inline const ::std::string& AnalyzeExternalRefsResult_PointerData::proc() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.PointerData.proc)
  return *proc_;
}
inline void AnalyzeExternalRefsResult_PointerData::set_proc(const ::std::string& value) {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  proc_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.PointerData.proc)
}
inline void AnalyzeExternalRefsResult_PointerData::set_proc(const char* value) {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  proc_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.PointerData.proc)
}
inline void AnalyzeExternalRefsResult_PointerData::set_proc(const char* value, size_t size) {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  proc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.PointerData.proc)
}
inline ::std::string* AnalyzeExternalRefsResult_PointerData::mutable_proc() {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.PointerData.proc)
  return proc_;
}
inline ::std::string* AnalyzeExternalRefsResult_PointerData::release_proc() {
  clear_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = proc_;
    proc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_PointerData::set_allocated_proc(::std::string* proc) {
  if (proc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete proc_;
  }
  if (proc) {
    set_has_proc();
    proc_ = proc;
  } else {
    clear_has_proc();
    proc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.PointerData.proc)
}

// optional string ordinal_collision_dll_path = 4;
inline bool AnalyzeExternalRefsResult_PointerData::has_ordinal_collision_dll_path() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnalyzeExternalRefsResult_PointerData::set_has_ordinal_collision_dll_path() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_has_ordinal_collision_dll_path() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnalyzeExternalRefsResult_PointerData::clear_ordinal_collision_dll_path() {
  if (ordinal_collision_dll_path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_->clear();
  }
  clear_has_ordinal_collision_dll_path();
}
inline const ::std::string& AnalyzeExternalRefsResult_PointerData::ordinal_collision_dll_path() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.PointerData.ordinal_collision_dll_path)
  return *ordinal_collision_dll_path_;
}
inline void AnalyzeExternalRefsResult_PointerData::set_ordinal_collision_dll_path(const ::std::string& value) {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  ordinal_collision_dll_path_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.PointerData.ordinal_collision_dll_path)
}
inline void AnalyzeExternalRefsResult_PointerData::set_ordinal_collision_dll_path(const char* value) {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  ordinal_collision_dll_path_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.PointerData.ordinal_collision_dll_path)
}
inline void AnalyzeExternalRefsResult_PointerData::set_ordinal_collision_dll_path(const char* value, size_t size) {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  ordinal_collision_dll_path_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.PointerData.ordinal_collision_dll_path)
}
inline ::std::string* AnalyzeExternalRefsResult_PointerData::mutable_ordinal_collision_dll_path() {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.PointerData.ordinal_collision_dll_path)
  return ordinal_collision_dll_path_;
}
inline ::std::string* AnalyzeExternalRefsResult_PointerData::release_ordinal_collision_dll_path() {
  clear_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ordinal_collision_dll_path_;
    ordinal_collision_dll_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_PointerData::set_allocated_ordinal_collision_dll_path(::std::string* ordinal_collision_dll_path) {
  if (ordinal_collision_dll_path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ordinal_collision_dll_path_;
  }
  if (ordinal_collision_dll_path) {
    set_has_ordinal_collision_dll_path();
    ordinal_collision_dll_path_ = ordinal_collision_dll_path;
  } else {
    clear_has_ordinal_collision_dll_path();
    ordinal_collision_dll_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.PointerData.ordinal_collision_dll_path)
}

// -------------------------------------------------------------------

// AnalyzeExternalRefsResult_RefData

// required uint64 ea = 1;
inline bool AnalyzeExternalRefsResult_RefData::has_ea() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_ea() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_ea() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_ea() {
  ea_ = GOOGLE_ULONGLONG(0);
  clear_has_ea();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_RefData::ea() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.ea)
  return ea_;
}
inline void AnalyzeExternalRefsResult_RefData::set_ea(::google::protobuf::uint64 value) {
  set_has_ea();
  ea_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.ea)
}

// required uint64 len = 2;
inline bool AnalyzeExternalRefsResult_RefData::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_len() {
  len_ = GOOGLE_ULONGLONG(0);
  clear_has_len();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_RefData::len() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.len)
  return len_;
}
inline void AnalyzeExternalRefsResult_RefData::set_len(::google::protobuf::uint64 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.len)
}

// required string dis = 3;
inline bool AnalyzeExternalRefsResult_RefData::has_dis() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_dis() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_dis() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_dis() {
  if (dis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dis_->clear();
  }
  clear_has_dis();
}
inline const ::std::string& AnalyzeExternalRefsResult_RefData::dis() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.dis)
  return *dis_;
}
inline void AnalyzeExternalRefsResult_RefData::set_dis(const ::std::string& value) {
  set_has_dis();
  if (dis_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dis_ = new ::std::string;
  }
  dis_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.dis)
}
inline void AnalyzeExternalRefsResult_RefData::set_dis(const char* value) {
  set_has_dis();
  if (dis_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dis_ = new ::std::string;
  }
  dis_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.RefData.dis)
}
inline void AnalyzeExternalRefsResult_RefData::set_dis(const char* value, size_t size) {
  set_has_dis();
  if (dis_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dis_ = new ::std::string;
  }
  dis_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.RefData.dis)
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::mutable_dis() {
  set_has_dis();
  if (dis_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dis_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.RefData.dis)
  return dis_;
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::release_dis() {
  clear_has_dis();
  if (dis_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dis_;
    dis_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_RefData::set_allocated_dis(::std::string* dis) {
  if (dis_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dis_;
  }
  if (dis) {
    set_has_dis();
    dis_ = dis;
  } else {
    clear_has_dis();
    dis_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.RefData.dis)
}

// required uint64 v = 4;
inline bool AnalyzeExternalRefsResult_RefData::has_v() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_v() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_v() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_v() {
  v_ = GOOGLE_ULONGLONG(0);
  clear_has_v();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_RefData::v() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.v)
  return v_;
}
inline void AnalyzeExternalRefsResult_RefData::set_v(::google::protobuf::uint64 value) {
  set_has_v();
  v_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.v)
}

// required .rpc.AnalyzeExternalRefsResult.RefData.RefType ref_type = 5;
inline bool AnalyzeExternalRefsResult_RefData::has_ref_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_ref_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_ref_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_ref_type() {
  ref_type_ = 1;
  clear_has_ref_type();
}
inline ::rpc::AnalyzeExternalRefsResult_RefData_RefType AnalyzeExternalRefsResult_RefData::ref_type() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.ref_type)
  return static_cast< ::rpc::AnalyzeExternalRefsResult_RefData_RefType >(ref_type_);
}
inline void AnalyzeExternalRefsResult_RefData::set_ref_type(::rpc::AnalyzeExternalRefsResult_RefData_RefType value) {
  assert(::rpc::AnalyzeExternalRefsResult_RefData_RefType_IsValid(value));
  set_has_ref_type();
  ref_type_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.ref_type)
}

// required string module = 6;
inline bool AnalyzeExternalRefsResult_RefData::has_module() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_module() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_module() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_module() {
  if (module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_->clear();
  }
  clear_has_module();
}
inline const ::std::string& AnalyzeExternalRefsResult_RefData::module() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.module)
  return *module_;
}
inline void AnalyzeExternalRefsResult_RefData::set_module(const ::std::string& value) {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  module_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.module)
}
inline void AnalyzeExternalRefsResult_RefData::set_module(const char* value) {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  module_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.RefData.module)
}
inline void AnalyzeExternalRefsResult_RefData::set_module(const char* value, size_t size) {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  module_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.RefData.module)
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::mutable_module() {
  set_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    module_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.RefData.module)
  return module_;
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::release_module() {
  clear_has_module();
  if (module_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = module_;
    module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_RefData::set_allocated_module(::std::string* module) {
  if (module_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete module_;
  }
  if (module) {
    set_has_module();
    module_ = module;
  } else {
    clear_has_module();
    module_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.RefData.module)
}

// required string proc = 7;
inline bool AnalyzeExternalRefsResult_RefData::has_proc() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_proc() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_proc() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_proc() {
  if (proc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_->clear();
  }
  clear_has_proc();
}
inline const ::std::string& AnalyzeExternalRefsResult_RefData::proc() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.proc)
  return *proc_;
}
inline void AnalyzeExternalRefsResult_RefData::set_proc(const ::std::string& value) {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  proc_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.proc)
}
inline void AnalyzeExternalRefsResult_RefData::set_proc(const char* value) {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  proc_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.RefData.proc)
}
inline void AnalyzeExternalRefsResult_RefData::set_proc(const char* value, size_t size) {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  proc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.RefData.proc)
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::mutable_proc() {
  set_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    proc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.RefData.proc)
  return proc_;
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::release_proc() {
  clear_has_proc();
  if (proc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = proc_;
    proc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_RefData::set_allocated_proc(::std::string* proc) {
  if (proc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete proc_;
  }
  if (proc) {
    set_has_proc();
    proc_ = proc;
  } else {
    clear_has_proc();
    proc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.RefData.proc)
}

// optional string ordinal_collision_dll_path = 8;
inline bool AnalyzeExternalRefsResult_RefData::has_ordinal_collision_dll_path() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AnalyzeExternalRefsResult_RefData::set_has_ordinal_collision_dll_path() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_has_ordinal_collision_dll_path() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AnalyzeExternalRefsResult_RefData::clear_ordinal_collision_dll_path() {
  if (ordinal_collision_dll_path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_->clear();
  }
  clear_has_ordinal_collision_dll_path();
}
inline const ::std::string& AnalyzeExternalRefsResult_RefData::ordinal_collision_dll_path() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.RefData.ordinal_collision_dll_path)
  return *ordinal_collision_dll_path_;
}
inline void AnalyzeExternalRefsResult_RefData::set_ordinal_collision_dll_path(const ::std::string& value) {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  ordinal_collision_dll_path_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.RefData.ordinal_collision_dll_path)
}
inline void AnalyzeExternalRefsResult_RefData::set_ordinal_collision_dll_path(const char* value) {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  ordinal_collision_dll_path_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AnalyzeExternalRefsResult.RefData.ordinal_collision_dll_path)
}
inline void AnalyzeExternalRefsResult_RefData::set_ordinal_collision_dll_path(const char* value, size_t size) {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  ordinal_collision_dll_path_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AnalyzeExternalRefsResult.RefData.ordinal_collision_dll_path)
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::mutable_ordinal_collision_dll_path() {
  set_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ordinal_collision_dll_path_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.RefData.ordinal_collision_dll_path)
  return ordinal_collision_dll_path_;
}
inline ::std::string* AnalyzeExternalRefsResult_RefData::release_ordinal_collision_dll_path() {
  clear_has_ordinal_collision_dll_path();
  if (ordinal_collision_dll_path_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ordinal_collision_dll_path_;
    ordinal_collision_dll_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AnalyzeExternalRefsResult_RefData::set_allocated_ordinal_collision_dll_path(::std::string* ordinal_collision_dll_path) {
  if (ordinal_collision_dll_path_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ordinal_collision_dll_path_;
  }
  if (ordinal_collision_dll_path) {
    set_has_ordinal_collision_dll_path();
    ordinal_collision_dll_path_ = ordinal_collision_dll_path;
  } else {
    clear_has_ordinal_collision_dll_path();
    ordinal_collision_dll_path_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.RefData.ordinal_collision_dll_path)
}

// -------------------------------------------------------------------

// AnalyzeExternalRefsResult_reg_t

// required uint32 eax = 1;
inline bool AnalyzeExternalRefsResult_reg_t::has_eax() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_eax() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_eax() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_eax() {
  eax_ = 0u;
  clear_has_eax();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::eax() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.eax)
  return eax_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_eax(::google::protobuf::uint32 value) {
  set_has_eax();
  eax_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.eax)
}

// required uint32 ecx = 2;
inline bool AnalyzeExternalRefsResult_reg_t::has_ecx() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_ecx() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_ecx() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_ecx() {
  ecx_ = 0u;
  clear_has_ecx();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::ecx() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.ecx)
  return ecx_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_ecx(::google::protobuf::uint32 value) {
  set_has_ecx();
  ecx_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.ecx)
}

// required uint32 edx = 3;
inline bool AnalyzeExternalRefsResult_reg_t::has_edx() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_edx() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_edx() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_edx() {
  edx_ = 0u;
  clear_has_edx();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::edx() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.edx)
  return edx_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_edx(::google::protobuf::uint32 value) {
  set_has_edx();
  edx_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.edx)
}

// required uint32 ebx = 4;
inline bool AnalyzeExternalRefsResult_reg_t::has_ebx() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_ebx() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_ebx() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_ebx() {
  ebx_ = 0u;
  clear_has_ebx();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::ebx() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.ebx)
  return ebx_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_ebx(::google::protobuf::uint32 value) {
  set_has_ebx();
  ebx_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.ebx)
}

// required uint32 esp = 5;
inline bool AnalyzeExternalRefsResult_reg_t::has_esp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_esp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_esp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_esp() {
  esp_ = 0u;
  clear_has_esp();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::esp() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.esp)
  return esp_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_esp(::google::protobuf::uint32 value) {
  set_has_esp();
  esp_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.esp)
}

// required uint32 ebp = 6;
inline bool AnalyzeExternalRefsResult_reg_t::has_ebp() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_ebp() {
  _has_bits_[0] |= 0x00000020u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_ebp() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_ebp() {
  ebp_ = 0u;
  clear_has_ebp();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::ebp() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.ebp)
  return ebp_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_ebp(::google::protobuf::uint32 value) {
  set_has_ebp();
  ebp_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.ebp)
}

// required uint32 esi = 7;
inline bool AnalyzeExternalRefsResult_reg_t::has_esi() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_esi() {
  _has_bits_[0] |= 0x00000040u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_esi() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_esi() {
  esi_ = 0u;
  clear_has_esi();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::esi() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.esi)
  return esi_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_esi(::google::protobuf::uint32 value) {
  set_has_esi();
  esi_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.esi)
}

// required uint32 edi = 8;
inline bool AnalyzeExternalRefsResult_reg_t::has_edi() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_edi() {
  _has_bits_[0] |= 0x00000080u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_edi() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_edi() {
  edi_ = 0u;
  clear_has_edi();
}
inline ::google::protobuf::uint32 AnalyzeExternalRefsResult_reg_t::edi() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.edi)
  return edi_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_edi(::google::protobuf::uint32 value) {
  set_has_edi();
  edi_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.edi)
}

// required uint64 rip = 9;
inline bool AnalyzeExternalRefsResult_reg_t::has_rip() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rip() {
  _has_bits_[0] |= 0x00000100u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rip() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rip() {
  rip_ = GOOGLE_ULONGLONG(0);
  clear_has_rip();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rip() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rip)
  return rip_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rip(::google::protobuf::uint64 value) {
  set_has_rip();
  rip_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rip)
}

// optional uint64 rax = 10;
inline bool AnalyzeExternalRefsResult_reg_t::has_rax() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rax() {
  _has_bits_[0] |= 0x00000200u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rax() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rax() {
  rax_ = GOOGLE_ULONGLONG(0);
  clear_has_rax();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rax() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rax)
  return rax_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rax(::google::protobuf::uint64 value) {
  set_has_rax();
  rax_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rax)
}

// optional uint64 rbx = 11;
inline bool AnalyzeExternalRefsResult_reg_t::has_rbx() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rbx() {
  _has_bits_[0] |= 0x00000400u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rbx() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rbx() {
  rbx_ = GOOGLE_ULONGLONG(0);
  clear_has_rbx();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rbx() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rbx)
  return rbx_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rbx(::google::protobuf::uint64 value) {
  set_has_rbx();
  rbx_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rbx)
}

// optional uint64 rcx = 12;
inline bool AnalyzeExternalRefsResult_reg_t::has_rcx() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rcx() {
  _has_bits_[0] |= 0x00000800u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rcx() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rcx() {
  rcx_ = GOOGLE_ULONGLONG(0);
  clear_has_rcx();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rcx() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rcx)
  return rcx_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rcx(::google::protobuf::uint64 value) {
  set_has_rcx();
  rcx_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rcx)
}

// optional uint64 rdx = 13;
inline bool AnalyzeExternalRefsResult_reg_t::has_rdx() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rdx() {
  _has_bits_[0] |= 0x00001000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rdx() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rdx() {
  rdx_ = GOOGLE_ULONGLONG(0);
  clear_has_rdx();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rdx() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rdx)
  return rdx_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rdx(::google::protobuf::uint64 value) {
  set_has_rdx();
  rdx_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rdx)
}

// optional uint64 rsi = 14;
inline bool AnalyzeExternalRefsResult_reg_t::has_rsi() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rsi() {
  _has_bits_[0] |= 0x00002000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rsi() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rsi() {
  rsi_ = GOOGLE_ULONGLONG(0);
  clear_has_rsi();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rsi() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rsi)
  return rsi_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rsi(::google::protobuf::uint64 value) {
  set_has_rsi();
  rsi_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rsi)
}

// optional uint64 rdi = 15;
inline bool AnalyzeExternalRefsResult_reg_t::has_rdi() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rdi() {
  _has_bits_[0] |= 0x00004000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rdi() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rdi() {
  rdi_ = GOOGLE_ULONGLONG(0);
  clear_has_rdi();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rdi() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rdi)
  return rdi_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rdi(::google::protobuf::uint64 value) {
  set_has_rdi();
  rdi_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rdi)
}

// optional uint64 rbp = 16;
inline bool AnalyzeExternalRefsResult_reg_t::has_rbp() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rbp() {
  _has_bits_[0] |= 0x00008000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rbp() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rbp() {
  rbp_ = GOOGLE_ULONGLONG(0);
  clear_has_rbp();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rbp() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rbp)
  return rbp_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rbp(::google::protobuf::uint64 value) {
  set_has_rbp();
  rbp_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rbp)
}

// optional uint64 rsp = 17;
inline bool AnalyzeExternalRefsResult_reg_t::has_rsp() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void AnalyzeExternalRefsResult_reg_t::set_has_rsp() {
  _has_bits_[0] |= 0x00010000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_has_rsp() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void AnalyzeExternalRefsResult_reg_t::clear_rsp() {
  rsp_ = GOOGLE_ULONGLONG(0);
  clear_has_rsp();
}
inline ::google::protobuf::uint64 AnalyzeExternalRefsResult_reg_t::rsp() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.reg_t.rsp)
  return rsp_;
}
inline void AnalyzeExternalRefsResult_reg_t::set_rsp(::google::protobuf::uint64 value) {
  set_has_rsp();
  rsp_ = value;
  // @@protoc_insertion_point(field_set:rpc.AnalyzeExternalRefsResult.reg_t.rsp)
}

// -------------------------------------------------------------------

// AnalyzeExternalRefsResult

// repeated .rpc.AnalyzeExternalRefsResult.PointerData api_constants = 1;
inline int AnalyzeExternalRefsResult::api_constants_size() const {
  return api_constants_.size();
}
inline void AnalyzeExternalRefsResult::clear_api_constants() {
  api_constants_.Clear();
}
inline const ::rpc::AnalyzeExternalRefsResult_PointerData& AnalyzeExternalRefsResult::api_constants(int index) const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.api_constants)
  return api_constants_.Get(index);
}
inline ::rpc::AnalyzeExternalRefsResult_PointerData* AnalyzeExternalRefsResult::mutable_api_constants(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.api_constants)
  return api_constants_.Mutable(index);
}
inline ::rpc::AnalyzeExternalRefsResult_PointerData* AnalyzeExternalRefsResult::add_api_constants() {
  // @@protoc_insertion_point(field_add:rpc.AnalyzeExternalRefsResult.api_constants)
  return api_constants_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_PointerData >&
AnalyzeExternalRefsResult::api_constants() const {
  // @@protoc_insertion_point(field_list:rpc.AnalyzeExternalRefsResult.api_constants)
  return api_constants_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_PointerData >*
AnalyzeExternalRefsResult::mutable_api_constants() {
  // @@protoc_insertion_point(field_mutable_list:rpc.AnalyzeExternalRefsResult.api_constants)
  return &api_constants_;
}

// repeated .rpc.AnalyzeExternalRefsResult.RefData refs = 2;
inline int AnalyzeExternalRefsResult::refs_size() const {
  return refs_.size();
}
inline void AnalyzeExternalRefsResult::clear_refs() {
  refs_.Clear();
}
inline const ::rpc::AnalyzeExternalRefsResult_RefData& AnalyzeExternalRefsResult::refs(int index) const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.refs)
  return refs_.Get(index);
}
inline ::rpc::AnalyzeExternalRefsResult_RefData* AnalyzeExternalRefsResult::mutable_refs(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.refs)
  return refs_.Mutable(index);
}
inline ::rpc::AnalyzeExternalRefsResult_RefData* AnalyzeExternalRefsResult::add_refs() {
  // @@protoc_insertion_point(field_add:rpc.AnalyzeExternalRefsResult.refs)
  return refs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_RefData >&
AnalyzeExternalRefsResult::refs() const {
  // @@protoc_insertion_point(field_list:rpc.AnalyzeExternalRefsResult.refs)
  return refs_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::AnalyzeExternalRefsResult_RefData >*
AnalyzeExternalRefsResult::mutable_refs() {
  // @@protoc_insertion_point(field_mutable_list:rpc.AnalyzeExternalRefsResult.refs)
  return &refs_;
}

// required .rpc.AnalyzeExternalRefsResult.reg_t context = 3;
inline bool AnalyzeExternalRefsResult::has_context() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AnalyzeExternalRefsResult::set_has_context() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AnalyzeExternalRefsResult::clear_has_context() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AnalyzeExternalRefsResult::clear_context() {
  if (context_ != NULL) context_->::rpc::AnalyzeExternalRefsResult_reg_t::Clear();
  clear_has_context();
}
inline const ::rpc::AnalyzeExternalRefsResult_reg_t& AnalyzeExternalRefsResult::context() const {
  // @@protoc_insertion_point(field_get:rpc.AnalyzeExternalRefsResult.context)
  return context_ != NULL ? *context_ : *default_instance_->context_;
}
inline ::rpc::AnalyzeExternalRefsResult_reg_t* AnalyzeExternalRefsResult::mutable_context() {
  set_has_context();
  if (context_ == NULL) context_ = new ::rpc::AnalyzeExternalRefsResult_reg_t;
  // @@protoc_insertion_point(field_mutable:rpc.AnalyzeExternalRefsResult.context)
  return context_;
}
inline ::rpc::AnalyzeExternalRefsResult_reg_t* AnalyzeExternalRefsResult::release_context() {
  clear_has_context();
  ::rpc::AnalyzeExternalRefsResult_reg_t* temp = context_;
  context_ = NULL;
  return temp;
}
inline void AnalyzeExternalRefsResult::set_allocated_context(::rpc::AnalyzeExternalRefsResult_reg_t* context) {
  delete context_;
  context_ = context;
  if (context) {
    set_has_context();
  } else {
    clear_has_context();
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AnalyzeExternalRefsResult.context)
}

// -------------------------------------------------------------------

// CheckPEHeadersRequest

// required uint64 base = 1;
inline bool CheckPEHeadersRequest::has_base() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckPEHeadersRequest::set_has_base() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckPEHeadersRequest::clear_has_base() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckPEHeadersRequest::clear_base() {
  base_ = GOOGLE_ULONGLONG(0);
  clear_has_base();
}
inline ::google::protobuf::uint64 CheckPEHeadersRequest::base() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersRequest.base)
  return base_;
}
inline void CheckPEHeadersRequest::set_base(::google::protobuf::uint64 value) {
  set_has_base();
  base_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersRequest.base)
}

// required uint64 size = 2;
inline bool CheckPEHeadersRequest::has_size() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckPEHeadersRequest::set_has_size() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckPEHeadersRequest::clear_has_size() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckPEHeadersRequest::clear_size() {
  size_ = GOOGLE_ULONGLONG(0);
  clear_has_size();
}
inline ::google::protobuf::uint64 CheckPEHeadersRequest::size() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersRequest.size)
  return size_;
}
inline void CheckPEHeadersRequest::set_size(::google::protobuf::uint64 value) {
  set_has_size();
  size_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersRequest.size)
}

// -------------------------------------------------------------------

// CheckPEHeadersResult_Exports

// required uint64 ea = 1;
inline bool CheckPEHeadersResult_Exports::has_ea() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckPEHeadersResult_Exports::set_has_ea() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckPEHeadersResult_Exports::clear_has_ea() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckPEHeadersResult_Exports::clear_ea() {
  ea_ = GOOGLE_ULONGLONG(0);
  clear_has_ea();
}
inline ::google::protobuf::uint64 CheckPEHeadersResult_Exports::ea() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Exports.ea)
  return ea_;
}
inline void CheckPEHeadersResult_Exports::set_ea(::google::protobuf::uint64 value) {
  set_has_ea();
  ea_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Exports.ea)
}

// required uint64 ord = 2;
inline bool CheckPEHeadersResult_Exports::has_ord() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckPEHeadersResult_Exports::set_has_ord() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckPEHeadersResult_Exports::clear_has_ord() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckPEHeadersResult_Exports::clear_ord() {
  ord_ = GOOGLE_ULONGLONG(0);
  clear_has_ord();
}
inline ::google::protobuf::uint64 CheckPEHeadersResult_Exports::ord() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Exports.ord)
  return ord_;
}
inline void CheckPEHeadersResult_Exports::set_ord(::google::protobuf::uint64 value) {
  set_has_ord();
  ord_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Exports.ord)
}

// optional string name = 3;
inline bool CheckPEHeadersResult_Exports::has_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckPEHeadersResult_Exports::set_has_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckPEHeadersResult_Exports::clear_has_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckPEHeadersResult_Exports::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CheckPEHeadersResult_Exports::name() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Exports.name)
  return *name_;
}
inline void CheckPEHeadersResult_Exports::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Exports.name)
}
inline void CheckPEHeadersResult_Exports::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.CheckPEHeadersResult.Exports.name)
}
inline void CheckPEHeadersResult_Exports::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.CheckPEHeadersResult.Exports.name)
}
inline ::std::string* CheckPEHeadersResult_Exports::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.CheckPEHeadersResult.Exports.name)
  return name_;
}
inline ::std::string* CheckPEHeadersResult_Exports::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CheckPEHeadersResult_Exports::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.CheckPEHeadersResult.Exports.name)
}

// -------------------------------------------------------------------

// CheckPEHeadersResult_Section

// optional string name = 1;
inline bool CheckPEHeadersResult_Section::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckPEHeadersResult_Section::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckPEHeadersResult_Section::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckPEHeadersResult_Section::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& CheckPEHeadersResult_Section::name() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Section.name)
  return *name_;
}
inline void CheckPEHeadersResult_Section::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Section.name)
}
inline void CheckPEHeadersResult_Section::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.CheckPEHeadersResult.Section.name)
}
inline void CheckPEHeadersResult_Section::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.CheckPEHeadersResult.Section.name)
}
inline ::std::string* CheckPEHeadersResult_Section::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.CheckPEHeadersResult.Section.name)
  return name_;
}
inline ::std::string* CheckPEHeadersResult_Section::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CheckPEHeadersResult_Section::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.CheckPEHeadersResult.Section.name)
}

// optional uint64 va = 2;
inline bool CheckPEHeadersResult_Section::has_va() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CheckPEHeadersResult_Section::set_has_va() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CheckPEHeadersResult_Section::clear_has_va() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CheckPEHeadersResult_Section::clear_va() {
  va_ = GOOGLE_ULONGLONG(0);
  clear_has_va();
}
inline ::google::protobuf::uint64 CheckPEHeadersResult_Section::va() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Section.va)
  return va_;
}
inline void CheckPEHeadersResult_Section::set_va(::google::protobuf::uint64 value) {
  set_has_va();
  va_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Section.va)
}

// optional uint64 v_size = 3;
inline bool CheckPEHeadersResult_Section::has_v_size() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CheckPEHeadersResult_Section::set_has_v_size() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CheckPEHeadersResult_Section::clear_has_v_size() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CheckPEHeadersResult_Section::clear_v_size() {
  v_size_ = GOOGLE_ULONGLONG(0);
  clear_has_v_size();
}
inline ::google::protobuf::uint64 CheckPEHeadersResult_Section::v_size() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Section.v_size)
  return v_size_;
}
inline void CheckPEHeadersResult_Section::set_v_size(::google::protobuf::uint64 value) {
  set_has_v_size();
  v_size_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Section.v_size)
}

// optional uint64 raw = 4;
inline bool CheckPEHeadersResult_Section::has_raw() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CheckPEHeadersResult_Section::set_has_raw() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CheckPEHeadersResult_Section::clear_has_raw() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CheckPEHeadersResult_Section::clear_raw() {
  raw_ = GOOGLE_ULONGLONG(0);
  clear_has_raw();
}
inline ::google::protobuf::uint64 CheckPEHeadersResult_Section::raw() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Section.raw)
  return raw_;
}
inline void CheckPEHeadersResult_Section::set_raw(::google::protobuf::uint64 value) {
  set_has_raw();
  raw_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Section.raw)
}

// optional uint64 raw_size = 5;
inline bool CheckPEHeadersResult_Section::has_raw_size() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CheckPEHeadersResult_Section::set_has_raw_size() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CheckPEHeadersResult_Section::clear_has_raw_size() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CheckPEHeadersResult_Section::clear_raw_size() {
  raw_size_ = GOOGLE_ULONGLONG(0);
  clear_has_raw_size();
}
inline ::google::protobuf::uint64 CheckPEHeadersResult_Section::raw_size() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Section.raw_size)
  return raw_size_;
}
inline void CheckPEHeadersResult_Section::set_raw_size(::google::protobuf::uint64 value) {
  set_has_raw_size();
  raw_size_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Section.raw_size)
}

// optional uint32 characteristics = 6;
inline bool CheckPEHeadersResult_Section::has_characteristics() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CheckPEHeadersResult_Section::set_has_characteristics() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CheckPEHeadersResult_Section::clear_has_characteristics() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CheckPEHeadersResult_Section::clear_characteristics() {
  characteristics_ = 0u;
  clear_has_characteristics();
}
inline ::google::protobuf::uint32 CheckPEHeadersResult_Section::characteristics() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.Section.characteristics)
  return characteristics_;
}
inline void CheckPEHeadersResult_Section::set_characteristics(::google::protobuf::uint32 value) {
  set_has_characteristics();
  characteristics_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.Section.characteristics)
}

// -------------------------------------------------------------------

// CheckPEHeadersResult

// required bool pe_valid = 1;
inline bool CheckPEHeadersResult::has_pe_valid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CheckPEHeadersResult::set_has_pe_valid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CheckPEHeadersResult::clear_has_pe_valid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CheckPEHeadersResult::clear_pe_valid() {
  pe_valid_ = false;
  clear_has_pe_valid();
}
inline bool CheckPEHeadersResult::pe_valid() const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.pe_valid)
  return pe_valid_;
}
inline void CheckPEHeadersResult::set_pe_valid(bool value) {
  set_has_pe_valid();
  pe_valid_ = value;
  // @@protoc_insertion_point(field_set:rpc.CheckPEHeadersResult.pe_valid)
}

// repeated .rpc.CheckPEHeadersResult.Exports exps = 2;
inline int CheckPEHeadersResult::exps_size() const {
  return exps_.size();
}
inline void CheckPEHeadersResult::clear_exps() {
  exps_.Clear();
}
inline const ::rpc::CheckPEHeadersResult_Exports& CheckPEHeadersResult::exps(int index) const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.exps)
  return exps_.Get(index);
}
inline ::rpc::CheckPEHeadersResult_Exports* CheckPEHeadersResult::mutable_exps(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.CheckPEHeadersResult.exps)
  return exps_.Mutable(index);
}
inline ::rpc::CheckPEHeadersResult_Exports* CheckPEHeadersResult::add_exps() {
  // @@protoc_insertion_point(field_add:rpc.CheckPEHeadersResult.exps)
  return exps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Exports >&
CheckPEHeadersResult::exps() const {
  // @@protoc_insertion_point(field_list:rpc.CheckPEHeadersResult.exps)
  return exps_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Exports >*
CheckPEHeadersResult::mutable_exps() {
  // @@protoc_insertion_point(field_mutable_list:rpc.CheckPEHeadersResult.exps)
  return &exps_;
}

// repeated .rpc.CheckPEHeadersResult.Section sections = 3;
inline int CheckPEHeadersResult::sections_size() const {
  return sections_.size();
}
inline void CheckPEHeadersResult::clear_sections() {
  sections_.Clear();
}
inline const ::rpc::CheckPEHeadersResult_Section& CheckPEHeadersResult::sections(int index) const {
  // @@protoc_insertion_point(field_get:rpc.CheckPEHeadersResult.sections)
  return sections_.Get(index);
}
inline ::rpc::CheckPEHeadersResult_Section* CheckPEHeadersResult::mutable_sections(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.CheckPEHeadersResult.sections)
  return sections_.Mutable(index);
}
inline ::rpc::CheckPEHeadersResult_Section* CheckPEHeadersResult::add_sections() {
  // @@protoc_insertion_point(field_add:rpc.CheckPEHeadersResult.sections)
  return sections_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Section >&
CheckPEHeadersResult::sections() const {
  // @@protoc_insertion_point(field_list:rpc.CheckPEHeadersResult.sections)
  return sections_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::CheckPEHeadersResult_Section >*
CheckPEHeadersResult::mutable_sections() {
  // @@protoc_insertion_point(field_mutable_list:rpc.CheckPEHeadersResult.sections)
  return &sections_;
}

// -------------------------------------------------------------------

// GetBackendInfoResult

// required uint32 bitness = 1;
inline bool GetBackendInfoResult::has_bitness() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetBackendInfoResult::set_has_bitness() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetBackendInfoResult::clear_has_bitness() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetBackendInfoResult::clear_bitness() {
  bitness_ = 0u;
  clear_has_bitness();
}
inline ::google::protobuf::uint32 GetBackendInfoResult::bitness() const {
  // @@protoc_insertion_point(field_get:rpc.GetBackendInfoResult.bitness)
  return bitness_;
}
inline void GetBackendInfoResult::set_bitness(::google::protobuf::uint32 value) {
  set_has_bitness();
  bitness_ = value;
  // @@protoc_insertion_point(field_set:rpc.GetBackendInfoResult.bitness)
}

// required string dbg_name = 2;
inline bool GetBackendInfoResult::has_dbg_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetBackendInfoResult::set_has_dbg_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetBackendInfoResult::clear_has_dbg_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetBackendInfoResult::clear_dbg_name() {
  if (dbg_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_name_->clear();
  }
  clear_has_dbg_name();
}
inline const ::std::string& GetBackendInfoResult::dbg_name() const {
  // @@protoc_insertion_point(field_get:rpc.GetBackendInfoResult.dbg_name)
  return *dbg_name_;
}
inline void GetBackendInfoResult::set_dbg_name(const ::std::string& value) {
  set_has_dbg_name();
  if (dbg_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_name_ = new ::std::string;
  }
  dbg_name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.GetBackendInfoResult.dbg_name)
}
inline void GetBackendInfoResult::set_dbg_name(const char* value) {
  set_has_dbg_name();
  if (dbg_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_name_ = new ::std::string;
  }
  dbg_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.GetBackendInfoResult.dbg_name)
}
inline void GetBackendInfoResult::set_dbg_name(const char* value, size_t size) {
  set_has_dbg_name();
  if (dbg_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_name_ = new ::std::string;
  }
  dbg_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.GetBackendInfoResult.dbg_name)
}
inline ::std::string* GetBackendInfoResult::mutable_dbg_name() {
  set_has_dbg_name();
  if (dbg_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.GetBackendInfoResult.dbg_name)
  return dbg_name_;
}
inline ::std::string* GetBackendInfoResult::release_dbg_name() {
  clear_has_dbg_name();
  if (dbg_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbg_name_;
    dbg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetBackendInfoResult::set_allocated_dbg_name(::std::string* dbg_name) {
  if (dbg_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbg_name_;
  }
  if (dbg_name) {
    set_has_dbg_name();
    dbg_name_ = dbg_name;
  } else {
    clear_has_dbg_name();
    dbg_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.GetBackendInfoResult.dbg_name)
}

// optional string dbg_ver = 3;
inline bool GetBackendInfoResult::has_dbg_ver() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetBackendInfoResult::set_has_dbg_ver() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetBackendInfoResult::clear_has_dbg_ver() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetBackendInfoResult::clear_dbg_ver() {
  if (dbg_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_ver_->clear();
  }
  clear_has_dbg_ver();
}
inline const ::std::string& GetBackendInfoResult::dbg_ver() const {
  // @@protoc_insertion_point(field_get:rpc.GetBackendInfoResult.dbg_ver)
  return *dbg_ver_;
}
inline void GetBackendInfoResult::set_dbg_ver(const ::std::string& value) {
  set_has_dbg_ver();
  if (dbg_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_ver_ = new ::std::string;
  }
  dbg_ver_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.GetBackendInfoResult.dbg_ver)
}
inline void GetBackendInfoResult::set_dbg_ver(const char* value) {
  set_has_dbg_ver();
  if (dbg_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_ver_ = new ::std::string;
  }
  dbg_ver_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.GetBackendInfoResult.dbg_ver)
}
inline void GetBackendInfoResult::set_dbg_ver(const char* value, size_t size) {
  set_has_dbg_ver();
  if (dbg_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_ver_ = new ::std::string;
  }
  dbg_ver_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.GetBackendInfoResult.dbg_ver)
}
inline ::std::string* GetBackendInfoResult::mutable_dbg_ver() {
  set_has_dbg_ver();
  if (dbg_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dbg_ver_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.GetBackendInfoResult.dbg_ver)
  return dbg_ver_;
}
inline ::std::string* GetBackendInfoResult::release_dbg_ver() {
  clear_has_dbg_ver();
  if (dbg_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dbg_ver_;
    dbg_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetBackendInfoResult::set_allocated_dbg_ver(::std::string* dbg_ver) {
  if (dbg_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dbg_ver_;
  }
  if (dbg_ver) {
    set_has_dbg_ver();
    dbg_ver_ = dbg_ver;
  } else {
    clear_has_dbg_ver();
    dbg_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.GetBackendInfoResult.dbg_ver)
}

// required string labeless_ver = 4;
inline bool GetBackendInfoResult::has_labeless_ver() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetBackendInfoResult::set_has_labeless_ver() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetBackendInfoResult::clear_has_labeless_ver() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetBackendInfoResult::clear_labeless_ver() {
  if (labeless_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    labeless_ver_->clear();
  }
  clear_has_labeless_ver();
}
inline const ::std::string& GetBackendInfoResult::labeless_ver() const {
  // @@protoc_insertion_point(field_get:rpc.GetBackendInfoResult.labeless_ver)
  return *labeless_ver_;
}
inline void GetBackendInfoResult::set_labeless_ver(const ::std::string& value) {
  set_has_labeless_ver();
  if (labeless_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    labeless_ver_ = new ::std::string;
  }
  labeless_ver_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.GetBackendInfoResult.labeless_ver)
}
inline void GetBackendInfoResult::set_labeless_ver(const char* value) {
  set_has_labeless_ver();
  if (labeless_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    labeless_ver_ = new ::std::string;
  }
  labeless_ver_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.GetBackendInfoResult.labeless_ver)
}
inline void GetBackendInfoResult::set_labeless_ver(const char* value, size_t size) {
  set_has_labeless_ver();
  if (labeless_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    labeless_ver_ = new ::std::string;
  }
  labeless_ver_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.GetBackendInfoResult.labeless_ver)
}
inline ::std::string* GetBackendInfoResult::mutable_labeless_ver() {
  set_has_labeless_ver();
  if (labeless_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    labeless_ver_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.GetBackendInfoResult.labeless_ver)
  return labeless_ver_;
}
inline ::std::string* GetBackendInfoResult::release_labeless_ver() {
  clear_has_labeless_ver();
  if (labeless_ver_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = labeless_ver_;
    labeless_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetBackendInfoResult::set_allocated_labeless_ver(::std::string* labeless_ver) {
  if (labeless_ver_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete labeless_ver_;
  }
  if (labeless_ver) {
    set_has_labeless_ver();
    labeless_ver_ = labeless_ver;
  } else {
    clear_has_labeless_ver();
    labeless_ver_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.GetBackendInfoResult.labeless_ver)
}

// -------------------------------------------------------------------

// AutoCompleteCodeRequest

// required string source = 1;
inline bool AutoCompleteCodeRequest::has_source() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutoCompleteCodeRequest::set_has_source() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutoCompleteCodeRequest::clear_has_source() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutoCompleteCodeRequest::clear_source() {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_->clear();
  }
  clear_has_source();
}
inline const ::std::string& AutoCompleteCodeRequest::source() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeRequest.source)
  return *source_;
}
inline void AutoCompleteCodeRequest::set_source(const ::std::string& value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeRequest.source)
}
inline void AutoCompleteCodeRequest::set_source(const char* value) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeRequest.source)
}
inline void AutoCompleteCodeRequest::set_source(const char* value, size_t size) {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  source_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeRequest.source)
}
inline ::std::string* AutoCompleteCodeRequest::mutable_source() {
  set_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    source_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeRequest.source)
  return source_;
}
inline ::std::string* AutoCompleteCodeRequest::release_source() {
  clear_has_source();
  if (source_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = source_;
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AutoCompleteCodeRequest::set_allocated_source(::std::string* source) {
  if (source_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete source_;
  }
  if (source) {
    set_has_source();
    source_ = source;
  } else {
    clear_has_source();
    source_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AutoCompleteCodeRequest.source)
}

// required uint32 zline = 2;
inline bool AutoCompleteCodeRequest::has_zline() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutoCompleteCodeRequest::set_has_zline() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AutoCompleteCodeRequest::clear_has_zline() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AutoCompleteCodeRequest::clear_zline() {
  zline_ = 0u;
  clear_has_zline();
}
inline ::google::protobuf::uint32 AutoCompleteCodeRequest::zline() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeRequest.zline)
  return zline_;
}
inline void AutoCompleteCodeRequest::set_zline(::google::protobuf::uint32 value) {
  set_has_zline();
  zline_ = value;
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeRequest.zline)
}

// required uint32 zcol = 3;
inline bool AutoCompleteCodeRequest::has_zcol() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutoCompleteCodeRequest::set_has_zcol() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AutoCompleteCodeRequest::clear_has_zcol() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AutoCompleteCodeRequest::clear_zcol() {
  zcol_ = 0u;
  clear_has_zcol();
}
inline ::google::protobuf::uint32 AutoCompleteCodeRequest::zcol() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeRequest.zcol)
  return zcol_;
}
inline void AutoCompleteCodeRequest::set_zcol(::google::protobuf::uint32 value) {
  set_has_zcol();
  zcol_ = value;
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeRequest.zcol)
}

// required bool call_sig_only = 4;
inline bool AutoCompleteCodeRequest::has_call_sig_only() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutoCompleteCodeRequest::set_has_call_sig_only() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AutoCompleteCodeRequest::clear_has_call_sig_only() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AutoCompleteCodeRequest::clear_call_sig_only() {
  call_sig_only_ = false;
  clear_has_call_sig_only();
}
inline bool AutoCompleteCodeRequest::call_sig_only() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeRequest.call_sig_only)
  return call_sig_only_;
}
inline void AutoCompleteCodeRequest::set_call_sig_only(bool value) {
  set_has_call_sig_only();
  call_sig_only_ = value;
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeRequest.call_sig_only)
}

// -------------------------------------------------------------------

// AutoCompleteCodeResult_CallSignature_Param

// required string name = 1;
inline bool AutoCompleteCodeResult_CallSignature_Param::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutoCompleteCodeResult_CallSignature_Param::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutoCompleteCodeResult_CallSignature_Param::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AutoCompleteCodeResult_CallSignature_Param::name() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.Param.name)
  return *name_;
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.CallSignature.Param.name)
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeResult.CallSignature.Param.name)
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeResult.CallSignature.Param.name)
}
inline ::std::string* AutoCompleteCodeResult_CallSignature_Param::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.CallSignature.Param.name)
  return name_;
}
inline ::std::string* AutoCompleteCodeResult_CallSignature_Param::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AutoCompleteCodeResult.CallSignature.Param.name)
}

// optional string description = 2;
inline bool AutoCompleteCodeResult_CallSignature_Param::has_description() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_has_description() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AutoCompleteCodeResult_CallSignature_Param::clear_has_description() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AutoCompleteCodeResult_CallSignature_Param::clear_description() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_->clear();
  }
  clear_has_description();
}
inline const ::std::string& AutoCompleteCodeResult_CallSignature_Param::description() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.Param.description)
  return *description_;
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_description(const ::std::string& value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.CallSignature.Param.description)
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_description(const char* value) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeResult.CallSignature.Param.description)
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_description(const char* value, size_t size) {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  description_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeResult.CallSignature.Param.description)
}
inline ::std::string* AutoCompleteCodeResult_CallSignature_Param::mutable_description() {
  set_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    description_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.CallSignature.Param.description)
  return description_;
}
inline ::std::string* AutoCompleteCodeResult_CallSignature_Param::release_description() {
  clear_has_description();
  if (description_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = description_;
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AutoCompleteCodeResult_CallSignature_Param::set_allocated_description(::std::string* description) {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  if (description) {
    set_has_description();
    description_ = description;
  } else {
    clear_has_description();
    description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AutoCompleteCodeResult.CallSignature.Param.description)
}

// -------------------------------------------------------------------

// AutoCompleteCodeResult_CallSignature

// optional string cs_type = 1;
inline bool AutoCompleteCodeResult_CallSignature::has_cs_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AutoCompleteCodeResult_CallSignature::set_has_cs_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_has_cs_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_cs_type() {
  if (cs_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cs_type_->clear();
  }
  clear_has_cs_type();
}
inline const ::std::string& AutoCompleteCodeResult_CallSignature::cs_type() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.cs_type)
  return *cs_type_;
}
inline void AutoCompleteCodeResult_CallSignature::set_cs_type(const ::std::string& value) {
  set_has_cs_type();
  if (cs_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cs_type_ = new ::std::string;
  }
  cs_type_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.CallSignature.cs_type)
}
inline void AutoCompleteCodeResult_CallSignature::set_cs_type(const char* value) {
  set_has_cs_type();
  if (cs_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cs_type_ = new ::std::string;
  }
  cs_type_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeResult.CallSignature.cs_type)
}
inline void AutoCompleteCodeResult_CallSignature::set_cs_type(const char* value, size_t size) {
  set_has_cs_type();
  if (cs_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cs_type_ = new ::std::string;
  }
  cs_type_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeResult.CallSignature.cs_type)
}
inline ::std::string* AutoCompleteCodeResult_CallSignature::mutable_cs_type() {
  set_has_cs_type();
  if (cs_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    cs_type_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.CallSignature.cs_type)
  return cs_type_;
}
inline ::std::string* AutoCompleteCodeResult_CallSignature::release_cs_type() {
  clear_has_cs_type();
  if (cs_type_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = cs_type_;
    cs_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AutoCompleteCodeResult_CallSignature::set_allocated_cs_type(::std::string* cs_type) {
  if (cs_type_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete cs_type_;
  }
  if (cs_type) {
    set_has_cs_type();
    cs_type_ = cs_type;
  } else {
    clear_has_cs_type();
    cs_type_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AutoCompleteCodeResult.CallSignature.cs_type)
}

// required string name = 2;
inline bool AutoCompleteCodeResult_CallSignature::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AutoCompleteCodeResult_CallSignature::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& AutoCompleteCodeResult_CallSignature::name() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.name)
  return *name_;
}
inline void AutoCompleteCodeResult_CallSignature::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.CallSignature.name)
}
inline void AutoCompleteCodeResult_CallSignature::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeResult.CallSignature.name)
}
inline void AutoCompleteCodeResult_CallSignature::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeResult.CallSignature.name)
}
inline ::std::string* AutoCompleteCodeResult_CallSignature::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.CallSignature.name)
  return name_;
}
inline ::std::string* AutoCompleteCodeResult_CallSignature::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AutoCompleteCodeResult_CallSignature::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AutoCompleteCodeResult.CallSignature.name)
}

// required int32 index = 3;
inline bool AutoCompleteCodeResult_CallSignature::has_index() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AutoCompleteCodeResult_CallSignature::set_has_index() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_has_index() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_index() {
  index_ = 0;
  clear_has_index();
}
inline ::google::protobuf::int32 AutoCompleteCodeResult_CallSignature::index() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.index)
  return index_;
}
inline void AutoCompleteCodeResult_CallSignature::set_index(::google::protobuf::int32 value) {
  set_has_index();
  index_ = value;
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.CallSignature.index)
}

// optional string raw_doc = 4;
inline bool AutoCompleteCodeResult_CallSignature::has_raw_doc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AutoCompleteCodeResult_CallSignature::set_has_raw_doc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_has_raw_doc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AutoCompleteCodeResult_CallSignature::clear_raw_doc() {
  if (raw_doc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_doc_->clear();
  }
  clear_has_raw_doc();
}
inline const ::std::string& AutoCompleteCodeResult_CallSignature::raw_doc() const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.raw_doc)
  return *raw_doc_;
}
inline void AutoCompleteCodeResult_CallSignature::set_raw_doc(const ::std::string& value) {
  set_has_raw_doc();
  if (raw_doc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_doc_ = new ::std::string;
  }
  raw_doc_->assign(value);
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.CallSignature.raw_doc)
}
inline void AutoCompleteCodeResult_CallSignature::set_raw_doc(const char* value) {
  set_has_raw_doc();
  if (raw_doc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_doc_ = new ::std::string;
  }
  raw_doc_->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeResult.CallSignature.raw_doc)
}
inline void AutoCompleteCodeResult_CallSignature::set_raw_doc(const char* value, size_t size) {
  set_has_raw_doc();
  if (raw_doc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_doc_ = new ::std::string;
  }
  raw_doc_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeResult.CallSignature.raw_doc)
}
inline ::std::string* AutoCompleteCodeResult_CallSignature::mutable_raw_doc() {
  set_has_raw_doc();
  if (raw_doc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    raw_doc_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.CallSignature.raw_doc)
  return raw_doc_;
}
inline ::std::string* AutoCompleteCodeResult_CallSignature::release_raw_doc() {
  clear_has_raw_doc();
  if (raw_doc_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = raw_doc_;
    raw_doc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AutoCompleteCodeResult_CallSignature::set_allocated_raw_doc(::std::string* raw_doc) {
  if (raw_doc_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete raw_doc_;
  }
  if (raw_doc) {
    set_has_raw_doc();
    raw_doc_ = raw_doc;
  } else {
    clear_has_raw_doc();
    raw_doc_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:rpc.AutoCompleteCodeResult.CallSignature.raw_doc)
}

// repeated .rpc.AutoCompleteCodeResult.CallSignature.Param params = 5;
inline int AutoCompleteCodeResult_CallSignature::params_size() const {
  return params_.size();
}
inline void AutoCompleteCodeResult_CallSignature::clear_params() {
  params_.Clear();
}
inline const ::rpc::AutoCompleteCodeResult_CallSignature_Param& AutoCompleteCodeResult_CallSignature::params(int index) const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.CallSignature.params)
  return params_.Get(index);
}
inline ::rpc::AutoCompleteCodeResult_CallSignature_Param* AutoCompleteCodeResult_CallSignature::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.CallSignature.params)
  return params_.Mutable(index);
}
inline ::rpc::AutoCompleteCodeResult_CallSignature_Param* AutoCompleteCodeResult_CallSignature::add_params() {
  // @@protoc_insertion_point(field_add:rpc.AutoCompleteCodeResult.CallSignature.params)
  return params_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature_Param >&
AutoCompleteCodeResult_CallSignature::params() const {
  // @@protoc_insertion_point(field_list:rpc.AutoCompleteCodeResult.CallSignature.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature_Param >*
AutoCompleteCodeResult_CallSignature::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:rpc.AutoCompleteCodeResult.CallSignature.params)
  return &params_;
}

// -------------------------------------------------------------------

// AutoCompleteCodeResult

// repeated string completions = 1;
inline int AutoCompleteCodeResult::completions_size() const {
  return completions_.size();
}
inline void AutoCompleteCodeResult::clear_completions() {
  completions_.Clear();
}
inline const ::std::string& AutoCompleteCodeResult::completions(int index) const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.completions)
  return completions_.Get(index);
}
inline ::std::string* AutoCompleteCodeResult::mutable_completions(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.completions)
  return completions_.Mutable(index);
}
inline void AutoCompleteCodeResult::set_completions(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:rpc.AutoCompleteCodeResult.completions)
  completions_.Mutable(index)->assign(value);
}
inline void AutoCompleteCodeResult::set_completions(int index, const char* value) {
  completions_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:rpc.AutoCompleteCodeResult.completions)
}
inline void AutoCompleteCodeResult::set_completions(int index, const char* value, size_t size) {
  completions_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:rpc.AutoCompleteCodeResult.completions)
}
inline ::std::string* AutoCompleteCodeResult::add_completions() {
  return completions_.Add();
}
inline void AutoCompleteCodeResult::add_completions(const ::std::string& value) {
  completions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:rpc.AutoCompleteCodeResult.completions)
}
inline void AutoCompleteCodeResult::add_completions(const char* value) {
  completions_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:rpc.AutoCompleteCodeResult.completions)
}
inline void AutoCompleteCodeResult::add_completions(const char* value, size_t size) {
  completions_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:rpc.AutoCompleteCodeResult.completions)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AutoCompleteCodeResult::completions() const {
  // @@protoc_insertion_point(field_list:rpc.AutoCompleteCodeResult.completions)
  return completions_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AutoCompleteCodeResult::mutable_completions() {
  // @@protoc_insertion_point(field_mutable_list:rpc.AutoCompleteCodeResult.completions)
  return &completions_;
}

// repeated .rpc.AutoCompleteCodeResult.CallSignature call_sigs = 2;
inline int AutoCompleteCodeResult::call_sigs_size() const {
  return call_sigs_.size();
}
inline void AutoCompleteCodeResult::clear_call_sigs() {
  call_sigs_.Clear();
}
inline const ::rpc::AutoCompleteCodeResult_CallSignature& AutoCompleteCodeResult::call_sigs(int index) const {
  // @@protoc_insertion_point(field_get:rpc.AutoCompleteCodeResult.call_sigs)
  return call_sigs_.Get(index);
}
inline ::rpc::AutoCompleteCodeResult_CallSignature* AutoCompleteCodeResult::mutable_call_sigs(int index) {
  // @@protoc_insertion_point(field_mutable:rpc.AutoCompleteCodeResult.call_sigs)
  return call_sigs_.Mutable(index);
}
inline ::rpc::AutoCompleteCodeResult_CallSignature* AutoCompleteCodeResult::add_call_sigs() {
  // @@protoc_insertion_point(field_add:rpc.AutoCompleteCodeResult.call_sigs)
  return call_sigs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature >&
AutoCompleteCodeResult::call_sigs() const {
  // @@protoc_insertion_point(field_list:rpc.AutoCompleteCodeResult.call_sigs)
  return call_sigs_;
}
inline ::google::protobuf::RepeatedPtrField< ::rpc::AutoCompleteCodeResult_CallSignature >*
AutoCompleteCodeResult::mutable_call_sigs() {
  // @@protoc_insertion_point(field_mutable_list:rpc.AutoCompleteCodeResult.call_sigs)
  return &call_sigs_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace rpc

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::rpc::RpcRequest_RequestType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::RpcRequest_RequestType>() {
  return ::rpc::RpcRequest_RequestType_descriptor();
}
template <> struct is_proto_enum< ::rpc::Response_JobStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::Response_JobStatus>() {
  return ::rpc::Response_JobStatus_descriptor();
}
template <> struct is_proto_enum< ::rpc::AnalyzeExternalRefsResult_RefData_RefType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::rpc::AnalyzeExternalRefsResult_RefData_RefType>() {
  return ::rpc::AnalyzeExternalRefsResult_RefData_RefType_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_rpc_2eproto__INCLUDED
